(()=>{var V=(e,n)=>()=>(n||e((n={exports:{}}).exports,n),n.exports);var P=V((he,F)=>{F.exports=window.Tablesort});var K=P();function J(e){return e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;")}function C(e,n){e=e||[];for(let t=0;t<e.length;t++)n(e[t])}function z(){return document.documentElement&&document.documentElement.scrollTop||document.body.scrollTop}function W(){return window.matchMedia("only screen and (max-width: 680px)").matches}function I(e,n,t,o){Array.isArray(n)||(n=[n]),e.classList.add("animate__animated",...n);let i=()=>{e.classList.remove("animate__animated",...n),e.removeEventListener("animationend",i),typeof o=="function"&&o()};t||e.addEventListener("animationend",i)}function X(){Array.from(document.querySelectorAll("[data-svg-src]")).forEach(e=>{fetch(e.getAttribute("data-svg-src")).then(n=>n.text()).then(n=>{let t=document.createElement("div");t.insertAdjacentHTML("afterbegin",n);let o=t.firstChild;o.setAttribute("data-svg-src",e.getAttribute("data-svg-src")),o.classList.add("icon");let i=o.getElementsByTagName("title");i.length&&o.removeChild(i[0]),e.parentElement.replaceChild(o,e)})})}function Y(){let e=document.getElementById("menu-toggle-mobile"),n=document.getElementById("menu-mobile");window.menuToggleMobileEventListener||(e.addEventListener("click",()=>{document.body.classList.toggle("blur"),e.classList.toggle("active"),n.classList.toggle("active")}),window.menuToggleMobileEventListener=!0),window._menuMobileOnClickMask=()=>{e.classList.remove("active"),n.classList.remove("active")},window.clickMaskEventSet.add(window._menuMobileOnClickMask)}function A(e){document.body.setAttribute("theme",e),document.documentElement.style.setProperty("color-scheme",e==="light"?"light":"dark"),window.localStorage&&localStorage.setItem("theme",e),window.isDark=e!=="light"}function Z(){Array.from(document.getElementsByClassName("theme-switch")).forEach(e=>{e.addEventListener("click",()=>{let n=document.body.getAttribute("theme");A(n==="dark"?"black":n==="black"?"light":"dark");for(let t of window.switchThemeEventSet)t()})})}function Q(){Array.from(document.getElementsByClassName("color-theme-select")).forEach(e=>{let n=document.body.getAttribute("theme");for(let t=0;t<e.options.length;t++)if(e.options[t].value===n){e.selectedIndex=t;break}e.addEventListener("change",()=>{let t=e.value;window.localStorage&&localStorage.setItem("theme",t),t!=="auto"?A(t):window.matchMedia&&window.matchMedia("(prefers-color-scheme: dark)").matches?A("dark"):A("light");for(let o of window.switchThemeEventSet)o()})})}function G(){let e=window.config.search,n=window.matchMedia&&window.matchMedia("only screen and (max-width: 680px)").matches;if(!e||n&&window._searchMobileOnce||!n&&window._searchDesktopOnce)return;let t=e.maxResultLength?e.maxResultLength:10,o=e.snippetLength?e.snippetLength:50,i=e.highlightTag?e.highlightTag:"em",s=e.isCaseSensitive?e.isCaseSensitive:!1,a=e.minMatchCharLength?e.minMatchCharLength:1,d=e.findAllMatches?e.findAllMatches:!1,l=e.location?e.location:0,_=e.threshold?e.threshold:.3,B=e.distance?e.distance:100,y=e.ignoreLocation?e.ignoreLocation:!1,O=e.useExtendedSearch?e.useExtendedSearch:!1,$=e.ignoreFieldNorm?e.ignoreFieldNorm:!1,m=n?"mobile":"desktop",v=document.getElementById(`header-${m}`),c=document.getElementById(`search-input-${m}`),N=document.getElementById(`search-toggle-${m}`),k=document.getElementById(`search-loading-${m}`),f=document.getElementById(`search-clear-${m}`);n?(window._searchMobileOnce=!0,c.addEventListener("focus",()=>{M("autocomplete-script","/lib/autocomplete/autocomplete.min.js"),window.config?.search?.type==="algolia"?M("algolia-script","/lib/algoliasearch/algoliasearch-lite.umd.min.js"):M("fuse-script","/lib/fuse/fuse.min.js"),document.body.classList.add("blur"),v.classList.add("open")}),document.getElementById("search-cancel-mobile").addEventListener("click",()=>{v.classList.remove("open"),document.body.classList.remove("blur"),document.getElementById("menu-toggle-mobile").classList.remove("active"),document.getElementById("menu-mobile").classList.remove("active"),k.style.display="none",f.style.display="none",window._searchMobile&&window._searchMobile.autocomplete.setVal("")}),f.addEventListener("click",()=>{f.style.display="none",window._searchMobile&&window._searchMobile.autocomplete.setVal("")},!1),window._searchMobileOnClickMask=()=>{v.classList.remove("open"),k.style.display="none",f.style.display="none",window._searchMobile&&window._searchMobile.autocomplete.setVal("")},window.clickMaskEventSet.add(window._searchMobileOnClickMask)):(window._searchDesktopOnce=!0,N.addEventListener("click",()=>{M("autocomplete-script","/lib/autocomplete/autocomplete.min.js"),window.config?.search?.type==="algolia"?M("algolia-script","/lib/algoliasearch/algoliasearch-lite.umd.min.js"):M("fuse-script","/lib/fuse/fuse.min.js"),document.body.classList.add("blur"),v.classList.add("open"),c.focus()}),f.addEventListener("click",()=>{f.style.display="none",window._searchDesktop&&window._searchDesktop.autocomplete.setVal("")}),document.addEventListener("keydown",b=>{b.ctrlKey&&b.code==="KeyK"&&(b.preventDefault(),N.click())}),window._searchDesktopOnClickMask=()=>{v.classList.remove("open"),k.style.display="none",f.style.display="none",window._searchDesktop&&window._searchDesktop.autocomplete.setVal("")},window.clickMaskEventSet.add(window._searchDesktopOnClickMask)),c.addEventListener("input",()=>{c.value===""?f.style.display="none":f.style.display="inline"});let U=()=>{let b=autocomplete(`#search-input-${m}`,{hint:!1,autoselect:!0,dropdownMenuContainer:`#search-dropdown-${m}`,clearOnSelected:!0,cssClasses:{noPrefix:!0},debug:!0},{name:"search",source:(g,T)=>{k.style.display="inline",f.style.display="none";let r=S=>{k.style.display="none",f.style.display="inline",T(S)};if(e.type==="algolia")window._algoliaIndex=window._algoliaIndex||algoliasearch(e.algoliaAppID,e.algoliaSearchKey).initIndex(e.algoliaIndex),window._algoliaIndex.search(g,{offset:0,length:t*8,attributesToHighlight:["title"],attributesToRetrieve:["*"],attributesToSnippet:[`content:${o}`],highlightPreTag:`<${i}>`,highlightPostTag:`</${i}>`}).then(({hits:S})=>{let u={};S.forEach(({uri:h,date:R,_highlightResult:{title:j},_snippetResult:{content:L}})=>{u[h]&&u[h].context.length>L.value||(u[h]={uri:h,title:j.value,date:R,context:L.value})}),r(Object.values(u).slice(0,t))}).catch(S=>{console.error(S),r([])});else if(e.type==="fuse"){let S=()=>{let u={};return window._index.search(g).forEach(({item:h,refIndex:R,matches:j})=>{let L=h.title,x=h.content;j.forEach(({indices:E,value:ue,key:q})=>{if(q==="content"){let p=0;for(let w=0;w<E.length;w++){let D=x.substring(E[w][0]+p,E[w][1]+1+p),H=`<${i}>`+D+`</${i}>`;x=x.substring(0,E[w][0]+p)+H+x.substring(E[w][1]+1+p,x.length),p+=i.length*2+5}}else if(q==="title"){let p=0;for(let w=0;w<E.length;w++){let D=L.substring(E[w][0]+p,E[w][1]+1+p),H=`<${i}>`+D+`</${i}>`;L=L.substring(0,E[w][0]+p)+H+L.substring(E[w][1]+1+p,x.length),p+=i.length*2+5}}}),u[h.uri]={uri:h.uri,title:L,date:h.date,context:x}}),Object.values(u).slice(0,t)};window._index?r(S()):fetch(e.fuseIndexURL).then(u=>u.json()).then(u=>{let h={isCaseSensitive:s,findAllMatches:d,minMatchCharLength:a,location:l,threshold:_,distance:B,ignoreLocation:y,useExtendedSearch:O,ignoreFieldNorm:$,includeScore:!1,shouldSort:!0,includeMatches:!0,keys:["content","title"]};window._index=new Fuse(u,h),r(S())}).catch(u=>{console.error(u),r([])})}},templates:{suggestion:({title:g,date:T,context:r})=>`<div><span class="suggestion-title">${g}</span><span class="suggestion-date">${T}</span></div><div class="suggestion-context">${r}</div>`,empty:({query:g})=>`<div class="search-empty">${e.noResultsFound}: <span class="search-query">"${J(g)}"</span></div>`,footer:()=>{let{searchType:g,icon:T,href:r}=e.type==="algolia"?{searchType:"algolia",icon:'<i class="fab fa-algolia fa-fw"></i>',href:"https://www.algolia.com/"}:{searchType:"Fuse.js",icon:"",href:"https://fusejs.io/"};return`<div class="search-footer">Search by <a href="${r}" rel="noopener noreffer" target="_blank">${T} ${g}</a></div>`}}});b.on("autocomplete:selected",(g,T,r,S)=>{window.location.assign(T.uri)}),n?window._searchMobile=b:window._searchDesktop=b};function M(b,g){if(document.querySelector(`#${b}`)===null){let T=document.querySelector("head"),r=document.createElement("script");r.setAttribute("src",g),r.setAttribute("id",b),r.onload=()=>U(),T.appendChild(r)}}}function ee(){C(document.getElementsByClassName("details"),e=>{let n=e.getElementsByClassName("details-summary")[0];n.addEventListener("click",()=>{let t=n.nextElementSibling;e.classList.contains("open")?t.style.maxHeight=null:t.style.maxHeight=t.scrollHeight+"px",e.classList.toggle("open")},!1)})}function te(){window.config.lightGallery&&lightGallery(document.getElementById("content"),window.config.lightGallery)}function ne(){C(document.querySelectorAll(".highlight > pre.chroma"),e=>{let n=document.createElement("div");n.className=e.className;let t=document.createElement("table");n.appendChild(t);let o=document.createElement("tbody");t.appendChild(o);let i=document.createElement("tr");o.appendChild(i);let s=document.createElement("td");i.appendChild(s),e.parentElement.replaceChild(n,e),s.appendChild(e)}),C(document.querySelectorAll(".highlight > .chroma"),e=>{let n=e.querySelectorAll("pre.chroma > code");if(n.length){let t=n[n.length-1],o=document.createElement("div");o.className="code-header "+t.className.toLowerCase();let i=document.createElement("span");i.classList.add("code-title"),i.insertAdjacentHTML("afterbegin",'<i class="arrow fas fa-chevron-right fa-fw"></i>'),i.addEventListener("click",()=>{let l=e.getElementsByClassName("table-wrapper")[0];e.classList.contains("open")?l.style.maxHeight=null:l.style.maxHeight=l.scrollHeight+"px",e.classList.toggle("open")},!1),o.appendChild(i);let s=document.createElement("span");s.insertAdjacentHTML("afterbegin",'<i class="fas fa-ellipsis-h fa-fw"></i>'),s.classList.add("ellipses"),s.addEventListener("click",()=>{e.classList.add("open")},!1),o.appendChild(s);let a=document.createElement("span");a.insertAdjacentHTML("afterbegin",'<i class="far fa-copy fa-fw"></i>'),a.classList.add("copy");let d=t.innerText;(window.config.code.maxShownLines<0||d.split(`
`).length<window.config.code.maxShownLines+2)&&e.classList.add("open"),window.config.code.copyTitle&&(a.setAttribute("data-clipboard-text",d),a.title=window.config.code.copyTitle,new ClipboardJS(a).on("success",_=>{I(t,"animate__flash"),a.firstElementChild.className="fas fa-check fa-fw",setTimeout(()=>{a.firstElementChild.className="far fa-copy fa-fw"},3e3)}),o.appendChild(a)),e.insertBefore(o,e.firstChild)}})}function oe(){C(document.querySelectorAll(".content table"),e=>{let n=document.createElement("div");n.className="table-wrapper",e.parentElement.replaceChild(n,e),n.appendChild(e),window.config?.table?.sort&&new K(e)})}function ie(){let e=document.getElementById("TableOfContents");if(e===null)return;let n=window.matchMedia&&window.matchMedia("only screen and (max-width: 1000px)").matches;if(document.getElementById("toc-static").getAttribute("kept")||n)window._tocOnScroll&&window.scrollEventSet.delete(window._tocOnScroll);else{let t=document.getElementById("toc-auto"),o=e.querySelectorAll("a:first-child"),i=e.getElementsByTagName("li"),s=document.getElementsByClassName("headerLink"),a=document.body.getAttribute("header-desktop")!=="normal",d=document.getElementById("header-desktop").offsetHeight,l=20+(a?d:0),_=t.offsetTop,B=_-l+(a?0:d);window._tocOnScroll=window._tocOnScroll||(()=>{let O=document.getElementById("post-footer").offsetTop-t.getBoundingClientRect().height,$=O-l+(a?0:d);if(window.newScrollTop<B?(t.style.position="absolute",t.style.top=`${_}px`):window.newScrollTop>$?(t.style.position="absolute",t.style.top=`${O}px`):(t.style.position="fixed",t.style.top=`${l}px`),o.length===0)return;let m=-1,v=l+window.newScrollTop;if(s[s.length-1].offsetTop<v)m=s.length-1;else for(let c=0;c<s.length-1;c++){let N=s[c].offsetTop,k=s[c+1].offsetTop;if(N<=v&&k>v){m=c;break}}if(Array.from(o).forEach(c=>c.classList.remove("active")),Array.from(i).forEach(c=>c.classList.remove("has-active")),m>=0&&m<o.length){o[m].classList.add("active");let c=o[m].parentElement;for(;c!==e;)c.classList.add("has-active"),c=c.parentElement.parentElement}}),window._tocOnScroll(),window.scrollEventSet.add(window._tocOnScroll)}}function se(){window.config.mapbox&&(mapboxgl.accessToken=window.config.mapbox.accessToken,mapboxgl.setRTLTextPlugin(window.config.mapbox.RTLTextPlugin),window._mapboxArr=window._mapboxArr||[],C(document.getElementsByClassName("mapbox"),e=>{let{lng:n,lat:t,zoom:o,lightStyle:i,darkStyle:s,marked:a,navigation:d,geolocate:l,scale:_,fullscreen:B}=window.config.data[e.id],y=new mapboxgl.Map({container:e,center:[n,t],zoom:o,minZoom:.2,style:window.isDark?s:i,attributionControl:!1});a&&new mapboxgl.Marker().setLngLat([n,t]).addTo(y),d&&y.addControl(new mapboxgl.NavigationControl,"bottom-right"),l&&y.addControl(new mapboxgl.GeolocateControl({positionOptions:{enableHighAccuracy:!0},showUserLocation:!0,trackUserLocation:!0}),"bottom-right"),_&&y.addControl(new mapboxgl.ScaleControl),B&&y.addControl(new mapboxgl.FullscreenControl),y.addControl(new MapboxLanguage),window._mapboxArr.push(y)}),window._mapboxOnSwitchTheme=()=>{C(window._mapboxArr,e=>{let n=e.getContainer(),{lightStyle:t,darkStyle:o}=window.config.data[n.id];e.setStyle(window.isDark?o:t),e.addControl(new MapboxLanguage)})},window.switchThemeEventSet.add(window._mapboxOnSwitchTheme))}function ae(){if(window.config.typeit){let e=window.config.typeit,n=e.speed?e.speed:100,t=e.cursorSpeed?e.cursorSpeed:1e3,o=e.cursorChar?e.cursorChar:"|";Object.values(e.data).forEach(i=>{let s=a=>{let d=i[a];if(!document.getElementById(d).hasAttribute("data-typeit-id")){let l=new TypeIt(`#${d}`,{strings:window.config.data[d],speed:n,lifeLike:!0,cursorSpeed:t,cursorChar:o,waitUntilVisible:!0,afterComplete:()=>{if(a===i.length-1){e.duration>=0&&window.setTimeout(()=>{l.destroy()},e.duration);return}l.destroy(),s(a+1)}}).go()}};s(0)})}}function le(){function e(o){let i=document.getElementsByTagName("meta");for(let s=0;s<i.length;s++)if(i[s].getAttribute("name")===o)return i[s]}let n=e("theme-color"),t={light:"#f8f8f8",dark:"#252627",black:"#000000"};window._metaThemeColorOnSwitchTheme=()=>{n.content=t[document.body.getAttribute("theme")]},window.switchThemeEventSet.add(window._metaThemeColorOnSwitchTheme),window._metaThemeColorOnSwitchTheme()}function ce(){let e=[],n=document.getElementById("view-comments");document.body.getAttribute("header-desktop")==="auto"&&e.push(document.getElementById("header-desktop")),document.body.getAttribute("header-mobile")==="auto"&&e.push(document.getElementById("header-mobile")),document.getElementById("comments")?(n.href="#comments",n.style.display="block"):n.style.display="null";let t=document.getElementById("fixed-buttons"),o=20,i=100;function s(){window.newScrollTop=z();let a=window.newScrollTop-window.oldScrollTop,d=W();C(e,l=>{a>o?(l.classList.remove("animate__fadeInDown"),I(l,["animate__fadeOutUp","animate__faster"],!0)):(a<-o||window.newScrollTop<=20)&&(l.classList.remove("animate__fadeOutUp"),I(l,["animate__fadeInDown","animate__faster"],!0))}),window.newScrollTop>i?d&&a>o?(t.classList.remove("animate__fadeIn"),I(t,["animate__fadeOut","animate__faster"],!0)):(!d||a<-o)&&(t.style.display="block",t.classList.remove("animate__fadeOut"),I(t,["animate__fadeIn","animate__faster"],!0)):(d||(t.classList.remove("animate__fadeIn"),I(t,["animate__fadeOut","animate__faster"],!0)),t.style.display="none");for(let l of window.scrollEventSet)l();window.oldScrollTop=window.newScrollTop}window.addEventListener("scroll",s,!1)}function de(){window.addEventListener("resize",()=>{window._resizeTimeout||(window._resizeTimeout=window.setTimeout(()=>{window._resizeTimeout=null;for(let e of window.resizeEventSet)e();G()},100))},!1)}function re(){document.getElementById("mask").addEventListener("click",()=>{for(let e of window.clickMaskEventSet)e();document.body.classList.remove("blur")},!1)}function me(){window.isDark=document.body.getAttribute("theme")!=="light",window.newScrollTop=z(),window.oldScrollTop=window.newScrollTop,window.scrollEventSet=new Set,window.resizeEventSet=new Set,window.switchThemeEventSet=new Set,window.clickMaskEventSet=new Set,window.objectFitImages&&objectFitImages(),X(),Y(),Z(),Q(),le(),G(),ee(),te(),ne(),oe(),ae(),se(),ie(),ce(),de(),re()}me();})();
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsibnMtaHVnbzovaG9tZS9uZWVwb28vY29kZS9uZWVwb28uZGV2L3RoZW1lcy9Eb0l0L2Fzc2V0cy9qcy9zaGltcy90YWJsZXNvcnQuanMiLCAiPHN0ZGluPiJdLAogICJzb3VyY2VzQ29udGVudCI6IFsibW9kdWxlLmV4cG9ydHMgPSB3aW5kb3cuVGFibGVzb3J0XG4iLCAiLyogZXNsaW50LWRpc2FibGUgbm8tbmV3ICovXG4vKiBlc2xpbnQtZGlzYWJsZSBuby11bmRlZiAqL1xuLy8gaW1wb3J0IENsaXBib2FyZEpTIGZyb20gJ2NsaXBib2FyZCdcbmNvbnN0IFRhYmxlc29ydCA9IHJlcXVpcmUoJ3RhYmxlc29ydCcpXG4vLyBjb25zdCBhdXRvY29tcGxldGUgPSByZXF1aXJlKCdhdXRvY29tcGxldGUuanMnKVxuXG5mdW5jdGlvbiBlc2NhcGUgKHVuc2FmZSkge1xuICByZXR1cm4gdW5zYWZlLnJlcGxhY2UoLyYvZywgJyZhbXA7JylcbiAgICAucmVwbGFjZSgvPC9nLCAnJmx0OycpXG4gICAgLnJlcGxhY2UoLz4vZywgJyZndDsnKVxuICAgIC5yZXBsYWNlKC9cIi9nLCAnJnF1b3Q7JylcbiAgICAucmVwbGFjZSgvJy9nLCAnJiMwMzk7Jylcbn1cblxuZnVuY3Rpb24gZm9yRWFjaCAoZWxlbWVudHMsIGhhbmRsZXIpIHtcbiAgZWxlbWVudHMgPSBlbGVtZW50cyB8fCBbXVxuICBmb3IgKGxldCBpID0gMDsgaSA8IGVsZW1lbnRzLmxlbmd0aDsgaSsrKSBoYW5kbGVyKGVsZW1lbnRzW2ldKVxufVxuXG5mdW5jdGlvbiBnZXRTY3JvbGxUb3AgKCkge1xuICByZXR1cm4gKGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCAmJiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsVG9wKSB8fCBkb2N1bWVudC5ib2R5LnNjcm9sbFRvcFxufVxuXG5mdW5jdGlvbiBpc01vYmlsZVdpbmRvdyAoKSB7XG4gIHJldHVybiB3aW5kb3cubWF0Y2hNZWRpYSgnb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDY4MHB4KScpLm1hdGNoZXNcbn1cblxuLyoqXG4gKiBBbmltYXRlIHRoZSBlbGVtZW50IHdpdGggQW5pbWF0ZUNTUy4gaHR0cHM6Ly9hbmltYXRlLnN0eWxlL1xuICogQHBhcmFtIHtIVE1MRWxlbWVudH0gZWxlbWVudCBUaGUgZWxlbWVudCB0byBhbmltYXRlLlxuICogQHBhcmFtIHtBcnJheX0gYW5pbWF0aW9uIFRoZSBhbmltYXRpb24gc2VsZWN0ZWQuXG4gKiBAcGFyYW0ge2Jvb2xlYW59IHJlc2VydmVkIFdoZXRoZXIgdG8gZXhlY3V0ZSB0aGUgY2FsbGJhY2sgYWZ0ZXIgdGhlIGFuaW1hdGlvbiBpcyBlbmRlZC5cbiAqIEBwYXJhbSB7ZnVuY3Rpb259IGNhbGxiYWNrIFRoZSBjYWxsYmFjayBnZXRzIGV4ZWN0dWVkIGFmdGVyIHRoZSBlbGVtZW50IGlzIGFuaW1hdGVkLlxuICovXG5mdW5jdGlvbiBhbmltYXRlQ1NTIChlbGVtZW50LCBhbmltYXRpb24sIHJlc2VydmVkLCBjYWxsYmFjaykge1xuICBpZiAoIUFycmF5LmlzQXJyYXkoYW5pbWF0aW9uKSkgYW5pbWF0aW9uID0gW2FuaW1hdGlvbl1cbiAgZWxlbWVudC5jbGFzc0xpc3QuYWRkKCdhbmltYXRlX19hbmltYXRlZCcsIC4uLmFuaW1hdGlvbilcbiAgY29uc3QgaGFuZGxlciA9ICgpID0+IHtcbiAgICBlbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoJ2FuaW1hdGVfX2FuaW1hdGVkJywgLi4uYW5pbWF0aW9uKVxuICAgIGVsZW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcignYW5pbWF0aW9uZW5kJywgaGFuZGxlcilcbiAgICBpZiAodHlwZW9mIGNhbGxiYWNrID09PSAnZnVuY3Rpb24nKSBjYWxsYmFjaygpXG4gIH1cbiAgaWYgKCFyZXNlcnZlZCkgZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdhbmltYXRpb25lbmQnLCBoYW5kbGVyKVxufVxuLyoqXG4gKiBGZXRjaCBhbmQgaW5pdGlhbGl6ZSBhbGwgU1ZHIGljb25zLlxuICovXG5mdW5jdGlvbiBpbml0U1ZHSWNvbiAoKSB7XG4gIEFycmF5LmZyb20oZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnW2RhdGEtc3ZnLXNyY10nKSkuZm9yRWFjaChpY29uID0+IHtcbiAgICBmZXRjaChpY29uLmdldEF0dHJpYnV0ZSgnZGF0YS1zdmctc3JjJykpXG4gICAgICAudGhlbihyZXNwb25zZSA9PiByZXNwb25zZS50ZXh0KCkpXG4gICAgICAudGhlbihzdmcgPT4ge1xuICAgICAgICBjb25zdCB0ZW1wID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JylcbiAgICAgICAgdGVtcC5pbnNlcnRBZGphY2VudEhUTUwoJ2FmdGVyYmVnaW4nLCBzdmcpXG4gICAgICAgIGNvbnN0IGRhdGFTdmcgPSB0ZW1wLmZpcnN0Q2hpbGRcbiAgICAgICAgZGF0YVN2Zy5zZXRBdHRyaWJ1dGUoJ2RhdGEtc3ZnLXNyYycsIGljb24uZ2V0QXR0cmlidXRlKCdkYXRhLXN2Zy1zcmMnKSlcbiAgICAgICAgZGF0YVN2Zy5jbGFzc0xpc3QuYWRkKCdpY29uJylcbiAgICAgICAgY29uc3QgdGl0bGVFbGVtZW50cyA9IGRhdGFTdmcuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ3RpdGxlJylcbiAgICAgICAgaWYgKHRpdGxlRWxlbWVudHMubGVuZ3RoKSBkYXRhU3ZnLnJlbW92ZUNoaWxkKHRpdGxlRWxlbWVudHNbMF0pXG4gICAgICAgIGljb24ucGFyZW50RWxlbWVudC5yZXBsYWNlQ2hpbGQoZGF0YVN2ZywgaWNvbilcbiAgICAgIH0pXG4gIH0pXG59XG5cbi8qKlxuICogSW5pdGlhbGl6ZSB0aGUgbW9iaWxlIG1lbnUgYmFyLlxuICovXG5mdW5jdGlvbiBpbml0TWVudU1vYmlsZSAoKSB7XG4gIGNvbnN0IG1lbnVUb2dnbGVNb2JpbGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbWVudS10b2dnbGUtbW9iaWxlJylcbiAgY29uc3QgbWVudU1vYmlsZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdtZW51LW1vYmlsZScpXG4gIC8vIElmIG5vIGV2ZW50IGxpc3RlbmVyIGhhcyBiZWVuIHJlZ2lzdGVyZWQgeWV0LCBhZGQgb25lLlxuICBpZiAoIXdpbmRvdy5tZW51VG9nZ2xlTW9iaWxlRXZlbnRMaXN0ZW5lcikge1xuICAgIG1lbnVUb2dnbGVNb2JpbGUuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgICBkb2N1bWVudC5ib2R5LmNsYXNzTGlzdC50b2dnbGUoJ2JsdXInKVxuICAgICAgbWVudVRvZ2dsZU1vYmlsZS5jbGFzc0xpc3QudG9nZ2xlKCdhY3RpdmUnKVxuICAgICAgbWVudU1vYmlsZS5jbGFzc0xpc3QudG9nZ2xlKCdhY3RpdmUnKVxuICAgIH0pXG4gICAgd2luZG93Lm1lbnVUb2dnbGVNb2JpbGVFdmVudExpc3RlbmVyID0gdHJ1ZVxuICB9XG4gIC8vIFJlbW92ZSB0aGUgbWFzayB3aGVuIGNsaWNrIG9uIGl0LlxuICB3aW5kb3cuX21lbnVNb2JpbGVPbkNsaWNrTWFzayA9ICgpID0+IHtcbiAgICBtZW51VG9nZ2xlTW9iaWxlLmNsYXNzTGlzdC5yZW1vdmUoJ2FjdGl2ZScpXG4gICAgbWVudU1vYmlsZS5jbGFzc0xpc3QucmVtb3ZlKCdhY3RpdmUnKVxuICB9XG4gIHdpbmRvdy5jbGlja01hc2tFdmVudFNldC5hZGQod2luZG93Ll9tZW51TW9iaWxlT25DbGlja01hc2spXG59XG5cbi8qKlxuICogU2V0IHRoZSBjb2xvciB0aGVtZVxuICogQHBhcmFtIHtzdHJpbmd9IHRoZW1lXG4gKi9cbmZ1bmN0aW9uIHNldENvbG9yVGhlbWUgKHRoZW1lKSB7XG4gIC8vIHNldCBib2R5IGF0dHJpYnV0ZSBmb3IgQ1NTIHNlbGVjdG9yXG4gIGRvY3VtZW50LmJvZHkuc2V0QXR0cmlidXRlKCd0aGVtZScsIHRoZW1lKVxuICAvLyBzZXQgcm9vdCBjb2xvciBzY2hlbWVcbiAgLy8gaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQ1NTL2NvbG9yLXNjaGVtZVxuICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc3R5bGUuc2V0UHJvcGVydHkoJ2NvbG9yLXNjaGVtZScsIHRoZW1lID09PSAnbGlnaHQnID8gJ2xpZ2h0JyA6ICdkYXJrJylcbiAgLy8gc2F2ZSB0byBsb2NhbCBzdG9yYWdlXG4gIHdpbmRvdy5sb2NhbFN0b3JhZ2UgJiYgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ3RoZW1lJywgdGhlbWUpXG4gIC8vIHNldCB3aW5kb3cuaXNEYXJrIGZvciBqc1xuICB3aW5kb3cuaXNEYXJrID0gISh0aGVtZSA9PT0gJ2xpZ2h0Jylcbn1cblxuLyoqXG4gKiBJbml0aWFsaXplIHRoZSBzd2l0Y2ggdGhlbWUgYnV0dG9uLlxuICovXG5mdW5jdGlvbiBpbml0U3dpdGNoVGhlbWUgKCkge1xuICBBcnJheS5mcm9tKGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ3RoZW1lLXN3aXRjaCcpKS5mb3JFYWNoKHRoZW1lU3dpdGNoID0+IHtcbiAgICB0aGVtZVN3aXRjaC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgIGNvbnN0IGN1cnJlbnRUaGVtZSA9IGRvY3VtZW50LmJvZHkuZ2V0QXR0cmlidXRlKCd0aGVtZScpXG4gICAgICBpZiAoY3VycmVudFRoZW1lID09PSAnZGFyaycpIHtcbiAgICAgICAgc2V0Q29sb3JUaGVtZSgnYmxhY2snKVxuICAgICAgfSBlbHNlIGlmIChjdXJyZW50VGhlbWUgPT09ICdibGFjaycpIHtcbiAgICAgICAgc2V0Q29sb3JUaGVtZSgnbGlnaHQnKVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc2V0Q29sb3JUaGVtZSgnZGFyaycpXG4gICAgICB9XG4gICAgICBmb3IgKGNvbnN0IGV2ZW50IG9mIHdpbmRvdy5zd2l0Y2hUaGVtZUV2ZW50U2V0KSBldmVudCgpXG4gICAgfSlcbiAgfSlcbn1cblxuLyoqXG4gKiBJbml0aWFsaXplIHRoZSBzZWxlY3QgdGhlbWUgYnV0dG9uLlxuICovXG5mdW5jdGlvbiBpbml0U2VsZWN0VGhlbWUgKCkge1xuICBBcnJheS5mcm9tKGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ2NvbG9yLXRoZW1lLXNlbGVjdCcpKS5mb3JFYWNoKHRoZW1lU2VsZWN0ID0+IHtcbiAgICAvLyBHZXQgdGhlIGN1cnJlbnQgdGhlbWVcbiAgICBjb25zdCBjdXJyZW50VGhlbWUgPSBkb2N1bWVudC5ib2R5LmdldEF0dHJpYnV0ZSgndGhlbWUnKVxuICAgIC8vIFNldCB0aGUgc2VsZWN0ZWQgSW5kZXhcbiAgICBmb3IgKGxldCBqID0gMDsgaiA8IHRoZW1lU2VsZWN0Lm9wdGlvbnMubGVuZ3RoOyBqKyspIHtcbiAgICAgIGNvbnN0IGkgPSB0aGVtZVNlbGVjdC5vcHRpb25zW2pdXG4gICAgICBpZiAoaS52YWx1ZSA9PT0gY3VycmVudFRoZW1lKSB7XG4gICAgICAgIHRoZW1lU2VsZWN0LnNlbGVjdGVkSW5kZXggPSBqXG4gICAgICAgIGJyZWFrXG4gICAgICB9XG4gICAgfVxuXG4gICAgdGhlbWVTZWxlY3QuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgKCkgPT4ge1xuICAgICAgY29uc3QgdGhlbWUgPSB0aGVtZVNlbGVjdC52YWx1ZVxuICAgICAgd2luZG93LmxvY2FsU3RvcmFnZSAmJiBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgndGhlbWUnLCB0aGVtZSlcbiAgICAgIGlmICh0aGVtZSAhPT0gJ2F1dG8nKSB7XG4gICAgICAgIHNldENvbG9yVGhlbWUodGhlbWUpXG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAod2luZG93Lm1hdGNoTWVkaWEgJiYgd2luZG93Lm1hdGNoTWVkaWEoJyhwcmVmZXJzLWNvbG9yLXNjaGVtZTogZGFyayknKS5tYXRjaGVzKSB7XG4gICAgICAgICAgc2V0Q29sb3JUaGVtZSgnZGFyaycpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgc2V0Q29sb3JUaGVtZSgnbGlnaHQnKVxuICAgICAgICB9XG4gICAgICB9XG4gICAgICBmb3IgKGNvbnN0IGV2ZW50IG9mIHdpbmRvdy5zd2l0Y2hUaGVtZUV2ZW50U2V0KSBldmVudCgpXG4gICAgfSlcbiAgfSlcbn1cblxuLyoqXG4gKiBJbml0aWFsaXplIHRoZSBzZWFyY2ggYm94LlxuICogQHJldHVybnMge251bGx9XG4gKi9cbmZ1bmN0aW9uIGluaXRTZWFyY2ggKCkge1xuICBjb25zdCBzZWFyY2hDb25maWcgPSB3aW5kb3cuY29uZmlnLnNlYXJjaFxuICBjb25zdCBpc01vYmlsZSA9IHdpbmRvdy5tYXRjaE1lZGlhICYmIHdpbmRvdy5tYXRjaE1lZGlhKCdvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNjgwcHgpJykubWF0Y2hlc1xuICAvLyBJZiB0aGVyZSBpcyBubyBzZWFyY2ggY29uZmlnXG4gIC8vIE9yIHRoZSBzZWFyY2ggaGFzIGJlZW4gaW5pdGlhbGl6ZWQgYWxyZWFkeVxuICAvLyBSZXR1cm4gZGlyZWN0bHlcbiAgaWYgKCFzZWFyY2hDb25maWcgfHwgKGlzTW9iaWxlICYmIHdpbmRvdy5fc2VhcmNoTW9iaWxlT25jZSkgfHwgKCFpc01vYmlsZSAmJiB3aW5kb3cuX3NlYXJjaERlc2t0b3BPbmNlKSkgcmV0dXJuXG5cbiAgLy8gSW5pdGlhbGl6ZSBkZWZhdWx0IHNlYXJjaCBjb25maWdcbiAgY29uc3QgbWF4UmVzdWx0TGVuZ3RoID0gc2VhcmNoQ29uZmlnLm1heFJlc3VsdExlbmd0aCA/IHNlYXJjaENvbmZpZy5tYXhSZXN1bHRMZW5ndGggOiAxMFxuICBjb25zdCBzbmlwcGV0TGVuZ3RoID0gc2VhcmNoQ29uZmlnLnNuaXBwZXRMZW5ndGggPyBzZWFyY2hDb25maWcuc25pcHBldExlbmd0aCA6IDUwXG4gIGNvbnN0IGhpZ2hsaWdodFRhZyA9IHNlYXJjaENvbmZpZy5oaWdobGlnaHRUYWcgPyBzZWFyY2hDb25maWcuaGlnaGxpZ2h0VGFnIDogJ2VtJ1xuICBjb25zdCBpc0Nhc2VTZW5zaXRpdmUgPSBzZWFyY2hDb25maWcuaXNDYXNlU2Vuc2l0aXZlID8gc2VhcmNoQ29uZmlnLmlzQ2FzZVNlbnNpdGl2ZSA6IGZhbHNlXG4gIGNvbnN0IG1pbk1hdGNoQ2hhckxlbmd0aCA9IHNlYXJjaENvbmZpZy5taW5NYXRjaENoYXJMZW5ndGggPyBzZWFyY2hDb25maWcubWluTWF0Y2hDaGFyTGVuZ3RoIDogMVxuICBjb25zdCBmaW5kQWxsTWF0Y2hlcyA9IHNlYXJjaENvbmZpZy5maW5kQWxsTWF0Y2hlcyA/IHNlYXJjaENvbmZpZy5maW5kQWxsTWF0Y2hlcyA6IGZhbHNlXG4gIGNvbnN0IGxvY2F0aW9uID0gc2VhcmNoQ29uZmlnLmxvY2F0aW9uID8gc2VhcmNoQ29uZmlnLmxvY2F0aW9uIDogMFxuICBjb25zdCB0aHJlc2hvbGQgPSBzZWFyY2hDb25maWcudGhyZXNob2xkID8gc2VhcmNoQ29uZmlnLnRocmVzaG9sZCA6IDAuM1xuICBjb25zdCBkaXN0YW5jZSA9IHNlYXJjaENvbmZpZy5kaXN0YW5jZSA/IHNlYXJjaENvbmZpZy5kaXN0YW5jZSA6IDEwMFxuICBjb25zdCBpZ25vcmVMb2NhdGlvbiA9IHNlYXJjaENvbmZpZy5pZ25vcmVMb2NhdGlvbiA/IHNlYXJjaENvbmZpZy5pZ25vcmVMb2NhdGlvbiA6IGZhbHNlXG4gIGNvbnN0IHVzZUV4dGVuZGVkU2VhcmNoID0gc2VhcmNoQ29uZmlnLnVzZUV4dGVuZGVkU2VhcmNoID8gc2VhcmNoQ29uZmlnLnVzZUV4dGVuZGVkU2VhcmNoIDogZmFsc2VcbiAgY29uc3QgaWdub3JlRmllbGROb3JtID0gc2VhcmNoQ29uZmlnLmlnbm9yZUZpZWxkTm9ybSA/IHNlYXJjaENvbmZpZy5pZ25vcmVGaWVsZE5vcm0gOiBmYWxzZVxuICBjb25zdCBzdWZmaXggPSBpc01vYmlsZSA/ICdtb2JpbGUnIDogJ2Rlc2t0b3AnXG4gIGNvbnN0IGhlYWRlciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGBoZWFkZXItJHtzdWZmaXh9YClcbiAgY29uc3Qgc2VhcmNoSW5wdXQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChgc2VhcmNoLWlucHV0LSR7c3VmZml4fWApXG4gIGNvbnN0IHNlYXJjaFRvZ2dsZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGBzZWFyY2gtdG9nZ2xlLSR7c3VmZml4fWApXG4gIGNvbnN0IHNlYXJjaExvYWRpbmcgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChgc2VhcmNoLWxvYWRpbmctJHtzdWZmaXh9YClcbiAgY29uc3Qgc2VhcmNoQ2xlYXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChgc2VhcmNoLWNsZWFyLSR7c3VmZml4fWApXG5cbiAgaWYgKGlzTW9iaWxlKSB7XG4gICAgd2luZG93Ll9zZWFyY2hNb2JpbGVPbmNlID0gdHJ1ZVxuICAgIC8vIFR1cm4gb24gdGhlIG1hc2sgd2hlbiBjbGlja2luZyBvbiB0aGUgc2VhcmNoIGJ1dHRvblxuICAgIHNlYXJjaElucHV0LmFkZEV2ZW50TGlzdGVuZXIoJ2ZvY3VzJywgKCkgPT4ge1xuICAgICAgbG9hZFNjcmlwdCgnYXV0b2NvbXBsZXRlLXNjcmlwdCcsICcvbGliL2F1dG9jb21wbGV0ZS9hdXRvY29tcGxldGUubWluLmpzJylcbiAgICAgIGlmICh3aW5kb3cuY29uZmlnPy5zZWFyY2g/LnR5cGUgPT09ICdhbGdvbGlhJykge1xuICAgICAgICBsb2FkU2NyaXB0KCdhbGdvbGlhLXNjcmlwdCcsICcvbGliL2FsZ29saWFzZWFyY2gvYWxnb2xpYXNlYXJjaC1saXRlLnVtZC5taW4uanMnKVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbG9hZFNjcmlwdCgnZnVzZS1zY3JpcHQnLCAnL2xpYi9mdXNlL2Z1c2UubWluLmpzJylcbiAgICAgIH1cbiAgICAgIGRvY3VtZW50LmJvZHkuY2xhc3NMaXN0LmFkZCgnYmx1cicpXG4gICAgICBoZWFkZXIuY2xhc3NMaXN0LmFkZCgnb3BlbicpXG4gICAgfSlcbiAgICAvLyBUdXJuIG9mZiB0aGUgZXZlcnl0aGluZyB3aGVuIGNsaWNraW5nIG9uIHRoZSBjYW5jZWwgYnV0dG9uXG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3NlYXJjaC1jYW5jZWwtbW9iaWxlJykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgICBoZWFkZXIuY2xhc3NMaXN0LnJlbW92ZSgnb3BlbicpXG4gICAgICBkb2N1bWVudC5ib2R5LmNsYXNzTGlzdC5yZW1vdmUoJ2JsdXInKVxuICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ21lbnUtdG9nZ2xlLW1vYmlsZScpLmNsYXNzTGlzdC5yZW1vdmUoJ2FjdGl2ZScpXG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbWVudS1tb2JpbGUnKS5jbGFzc0xpc3QucmVtb3ZlKCdhY3RpdmUnKVxuICAgICAgc2VhcmNoTG9hZGluZy5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnXG4gICAgICBzZWFyY2hDbGVhci5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnXG4gICAgICB3aW5kb3cuX3NlYXJjaE1vYmlsZSAmJiB3aW5kb3cuX3NlYXJjaE1vYmlsZS5hdXRvY29tcGxldGUuc2V0VmFsKCcnKVxuICAgIH0pXG4gICAgLy8gQ2xlYXIgdGhlIHNlYXJjaCBib3ggd2hlbiBjbGlja2luZyBvbiB0aGUgY2xlYXIgYnV0dG9uXG4gICAgc2VhcmNoQ2xlYXIuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgICBzZWFyY2hDbGVhci5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnXG4gICAgICB3aW5kb3cuX3NlYXJjaE1vYmlsZSAmJiB3aW5kb3cuX3NlYXJjaE1vYmlsZS5hdXRvY29tcGxldGUuc2V0VmFsKCcnKVxuICAgIH0sIGZhbHNlKVxuICAgIC8vIFJlbW92ZSB0aGUgbWFzayB3aGVuIGNsaWNrIG9uIGl0XG4gICAgd2luZG93Ll9zZWFyY2hNb2JpbGVPbkNsaWNrTWFzayA9ICgpID0+IHtcbiAgICAgIGhlYWRlci5jbGFzc0xpc3QucmVtb3ZlKCdvcGVuJylcbiAgICAgIHNlYXJjaExvYWRpbmcuc3R5bGUuZGlzcGxheSA9ICdub25lJ1xuICAgICAgc2VhcmNoQ2xlYXIuc3R5bGUuZGlzcGxheSA9ICdub25lJ1xuICAgICAgd2luZG93Ll9zZWFyY2hNb2JpbGUgJiYgd2luZG93Ll9zZWFyY2hNb2JpbGUuYXV0b2NvbXBsZXRlLnNldFZhbCgnJylcbiAgICB9XG4gICAgd2luZG93LmNsaWNrTWFza0V2ZW50U2V0LmFkZCh3aW5kb3cuX3NlYXJjaE1vYmlsZU9uQ2xpY2tNYXNrKVxuICB9IGVsc2Uge1xuICAgIHdpbmRvdy5fc2VhcmNoRGVza3RvcE9uY2UgPSB0cnVlXG4gICAgLy8gVHVybiBvbiB0aGUgbWFzayB3aGVuIGNsaWNraW5nIG9uIHRoZSBzZWFyY2ggYnV0dG9uXG4gICAgc2VhcmNoVG9nZ2xlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgbG9hZFNjcmlwdCgnYXV0b2NvbXBsZXRlLXNjcmlwdCcsICcvbGliL2F1dG9jb21wbGV0ZS9hdXRvY29tcGxldGUubWluLmpzJylcbiAgICAgIGlmICh3aW5kb3cuY29uZmlnPy5zZWFyY2g/LnR5cGUgPT09ICdhbGdvbGlhJykge1xuICAgICAgICBsb2FkU2NyaXB0KCdhbGdvbGlhLXNjcmlwdCcsICcvbGliL2FsZ29saWFzZWFyY2gvYWxnb2xpYXNlYXJjaC1saXRlLnVtZC5taW4uanMnKVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbG9hZFNjcmlwdCgnZnVzZS1zY3JpcHQnLCAnL2xpYi9mdXNlL2Z1c2UubWluLmpzJylcbiAgICAgIH1cbiAgICAgIGRvY3VtZW50LmJvZHkuY2xhc3NMaXN0LmFkZCgnYmx1cicpXG4gICAgICBoZWFkZXIuY2xhc3NMaXN0LmFkZCgnb3BlbicpXG4gICAgICBzZWFyY2hJbnB1dC5mb2N1cygpXG4gICAgfSlcbiAgICAvLyBDbGVhciB0aGUgc2VhcmNoIGJveCB3aGVuIGNsaWNraW5nIG9uIHRoZSBjbGVhciBidXR0b25cbiAgICBzZWFyY2hDbGVhci5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgIHNlYXJjaENsZWFyLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSdcbiAgICAgIHdpbmRvdy5fc2VhcmNoRGVza3RvcCAmJiB3aW5kb3cuX3NlYXJjaERlc2t0b3AuYXV0b2NvbXBsZXRlLnNldFZhbCgnJylcbiAgICB9KVxuICAgIC8vIFRvZ2dsZSBzZWFyY2ggd2hlbiBDdHJsICsgSyBpcyBwcmVzc2VkXG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIGUgPT4ge1xuICAgICAgaWYgKGUuY3RybEtleSAmJiBlLmNvZGUgPT09ICdLZXlLJykge1xuICAgICAgICBlLnByZXZlbnREZWZhdWx0KClcbiAgICAgICAgc2VhcmNoVG9nZ2xlLmNsaWNrKClcbiAgICAgIH1cbiAgICB9KVxuICAgIC8vIFJlbW92ZSB0aGUgbWFzayB3aGVuIGNsaWNrIG9uIGl0XG4gICAgd2luZG93Ll9zZWFyY2hEZXNrdG9wT25DbGlja01hc2sgPSAoKSA9PiB7XG4gICAgICBoZWFkZXIuY2xhc3NMaXN0LnJlbW92ZSgnb3BlbicpXG4gICAgICBzZWFyY2hMb2FkaW5nLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSdcbiAgICAgIHNlYXJjaENsZWFyLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSdcbiAgICAgIHdpbmRvdy5fc2VhcmNoRGVza3RvcCAmJiB3aW5kb3cuX3NlYXJjaERlc2t0b3AuYXV0b2NvbXBsZXRlLnNldFZhbCgnJylcbiAgICB9XG4gICAgd2luZG93LmNsaWNrTWFza0V2ZW50U2V0LmFkZCh3aW5kb3cuX3NlYXJjaERlc2t0b3BPbkNsaWNrTWFzaylcbiAgfVxuICAvLyBEaXNwbGF5IHRoZSBjbGVhciBidXR0b24gb25seSB3aGVuIHRoZSBzZWFyY2ggYm94IGlzIG5vdCBlbXB0eVxuICBzZWFyY2hJbnB1dC5hZGRFdmVudExpc3RlbmVyKCdpbnB1dCcsICgpID0+IHtcbiAgICBpZiAoc2VhcmNoSW5wdXQudmFsdWUgPT09ICcnKSBzZWFyY2hDbGVhci5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnXG4gICAgZWxzZSBzZWFyY2hDbGVhci5zdHlsZS5kaXNwbGF5ID0gJ2lubGluZSdcbiAgfSlcblxuICBjb25zdCBpbml0QXV0b3NlYXJjaCA9ICgpID0+IHtcbiAgICBjb25zdCBhdXRvc2VhcmNoID0gYXV0b2NvbXBsZXRlKGAjc2VhcmNoLWlucHV0LSR7c3VmZml4fWAsIHtcbiAgICAgIGhpbnQ6IGZhbHNlLFxuICAgICAgYXV0b3NlbGVjdDogdHJ1ZSxcbiAgICAgIGRyb3Bkb3duTWVudUNvbnRhaW5lcjogYCNzZWFyY2gtZHJvcGRvd24tJHtzdWZmaXh9YCxcbiAgICAgIGNsZWFyT25TZWxlY3RlZDogdHJ1ZSxcbiAgICAgIGNzc0NsYXNzZXM6IHsgbm9QcmVmaXg6IHRydWUgfSxcbiAgICAgIGRlYnVnOiB0cnVlXG4gICAgfSwge1xuICAgICAgbmFtZTogJ3NlYXJjaCcsXG4gICAgICBzb3VyY2U6IChxdWVyeSwgY2FsbGJhY2spID0+IHtcbiAgICAgICAgc2VhcmNoTG9hZGluZy5zdHlsZS5kaXNwbGF5ID0gJ2lubGluZSdcbiAgICAgICAgc2VhcmNoQ2xlYXIuc3R5bGUuZGlzcGxheSA9ICdub25lJ1xuICAgICAgICBjb25zdCBmaW5pc2ggPSAocmVzdWx0cykgPT4ge1xuICAgICAgICAgIHNlYXJjaExvYWRpbmcuc3R5bGUuZGlzcGxheSA9ICdub25lJ1xuICAgICAgICAgIHNlYXJjaENsZWFyLnN0eWxlLmRpc3BsYXkgPSAnaW5saW5lJ1xuICAgICAgICAgIGNhbGxiYWNrKHJlc3VsdHMpXG4gICAgICAgIH1cbiAgICAgICAgaWYgKHNlYXJjaENvbmZpZy50eXBlID09PSAnYWxnb2xpYScpIHtcbiAgICAgICAgICB3aW5kb3cuX2FsZ29saWFJbmRleCA9IHdpbmRvdy5fYWxnb2xpYUluZGV4IHx8IGFsZ29saWFzZWFyY2goc2VhcmNoQ29uZmlnLmFsZ29saWFBcHBJRCwgc2VhcmNoQ29uZmlnLmFsZ29saWFTZWFyY2hLZXkpLmluaXRJbmRleChzZWFyY2hDb25maWcuYWxnb2xpYUluZGV4KVxuICAgICAgICAgIHdpbmRvdy5fYWxnb2xpYUluZGV4XG4gICAgICAgICAgICAuc2VhcmNoKHF1ZXJ5LCB7XG4gICAgICAgICAgICAgIG9mZnNldDogMCxcbiAgICAgICAgICAgICAgbGVuZ3RoOiBtYXhSZXN1bHRMZW5ndGggKiA4LFxuICAgICAgICAgICAgICBhdHRyaWJ1dGVzVG9IaWdobGlnaHQ6IFsndGl0bGUnXSxcbiAgICAgICAgICAgICAgYXR0cmlidXRlc1RvUmV0cmlldmU6IFsnKiddLFxuICAgICAgICAgICAgICBhdHRyaWJ1dGVzVG9TbmlwcGV0OiBbYGNvbnRlbnQ6JHtzbmlwcGV0TGVuZ3RofWBdLFxuICAgICAgICAgICAgICBoaWdobGlnaHRQcmVUYWc6IGA8JHtoaWdobGlnaHRUYWd9PmAsXG4gICAgICAgICAgICAgIGhpZ2hsaWdodFBvc3RUYWc6IGA8LyR7aGlnaGxpZ2h0VGFnfT5gXG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLnRoZW4oKHsgaGl0cyB9KSA9PiB7XG4gICAgICAgICAgICAgIGNvbnN0IHJlc3VsdHMgPSB7fVxuICAgICAgICAgICAgICBoaXRzLmZvckVhY2goKHsgdXJpLCBkYXRlLCBfaGlnaGxpZ2h0UmVzdWx0OiB7IHRpdGxlIH0sIF9zbmlwcGV0UmVzdWx0OiB7IGNvbnRlbnQgfSB9KSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKHJlc3VsdHNbdXJpXSAmJiByZXN1bHRzW3VyaV0uY29udGV4dC5sZW5ndGggPiBjb250ZW50LnZhbHVlKSByZXR1cm5cbiAgICAgICAgICAgICAgICByZXN1bHRzW3VyaV0gPSB7XG4gICAgICAgICAgICAgICAgICB1cmksXG4gICAgICAgICAgICAgICAgICB0aXRsZTogdGl0bGUudmFsdWUsXG4gICAgICAgICAgICAgICAgICBkYXRlLFxuICAgICAgICAgICAgICAgICAgY29udGV4dDogY29udGVudC52YWx1ZVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgZmluaXNoKE9iamVjdC52YWx1ZXMocmVzdWx0cykuc2xpY2UoMCwgbWF4UmVzdWx0TGVuZ3RoKSlcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAuY2F0Y2goZXJyID0+IHtcbiAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihlcnIpXG4gICAgICAgICAgICAgIGZpbmlzaChbXSlcbiAgICAgICAgICAgIH0pXG4gICAgICAgIH0gZWxzZSBpZiAoc2VhcmNoQ29uZmlnLnR5cGUgPT09ICdmdXNlJykge1xuICAgICAgICAgIGNvbnN0IHNlYXJjaCA9ICgpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHJlc3VsdHMgPSB7fVxuICAgICAgICAgICAgd2luZG93Ll9pbmRleC5zZWFyY2gocXVlcnkpLmZvckVhY2goKHsgaXRlbSwgcmVmSW5kZXgsIG1hdGNoZXMgfSkgPT4ge1xuICAgICAgICAgICAgICBsZXQgdGl0bGUgPSBpdGVtLnRpdGxlXG4gICAgICAgICAgICAgIGxldCBjb250ZW50ID0gaXRlbS5jb250ZW50XG4gICAgICAgICAgICAgIG1hdGNoZXMuZm9yRWFjaCgoeyBpbmRpY2VzLCB2YWx1ZSwga2V5IH0pID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoa2V5ID09PSAnY29udGVudCcpIHtcbiAgICAgICAgICAgICAgICAgIGxldCBvZmZzZXQgPSAwXG4gICAgICAgICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGluZGljZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3Qgc3Vic3RyID0gY29udGVudC5zdWJzdHJpbmcoaW5kaWNlc1tpXVswXSArIG9mZnNldCwgaW5kaWNlc1tpXVsxXSArIDEgKyBvZmZzZXQpXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHRhZyA9IGA8JHtoaWdobGlnaHRUYWd9PmAgKyBzdWJzdHIgKyBgPC8ke2hpZ2hsaWdodFRhZ30+YFxuICAgICAgICAgICAgICAgICAgICBjb250ZW50ID0gY29udGVudC5zdWJzdHJpbmcoMCwgaW5kaWNlc1tpXVswXSArIG9mZnNldCkgKyB0YWcgKyBjb250ZW50LnN1YnN0cmluZyhpbmRpY2VzW2ldWzFdICsgMSArIG9mZnNldCwgY29udGVudC5sZW5ndGgpXG4gICAgICAgICAgICAgICAgICAgIG9mZnNldCArPSBoaWdobGlnaHRUYWcubGVuZ3RoICogMiArIDVcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGtleSA9PT0gJ3RpdGxlJykge1xuICAgICAgICAgICAgICAgICAgbGV0IG9mZnNldCA9IDBcbiAgICAgICAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgaW5kaWNlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBzdWJzdHIgPSB0aXRsZS5zdWJzdHJpbmcoaW5kaWNlc1tpXVswXSArIG9mZnNldCwgaW5kaWNlc1tpXVsxXSArIDEgKyBvZmZzZXQpXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHRhZyA9IGA8JHtoaWdobGlnaHRUYWd9PmAgKyBzdWJzdHIgKyBgPC8ke2hpZ2hsaWdodFRhZ30+YFxuICAgICAgICAgICAgICAgICAgICB0aXRsZSA9IHRpdGxlLnN1YnN0cmluZygwLCBpbmRpY2VzW2ldWzBdICsgb2Zmc2V0KSArIHRhZyArIHRpdGxlLnN1YnN0cmluZyhpbmRpY2VzW2ldWzFdICsgMSArIG9mZnNldCwgY29udGVudC5sZW5ndGgpXG4gICAgICAgICAgICAgICAgICAgIG9mZnNldCArPSBoaWdobGlnaHRUYWcubGVuZ3RoICogMiArIDVcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgIHJlc3VsdHNbaXRlbS51cmldID0ge1xuICAgICAgICAgICAgICAgIHVyaTogaXRlbS51cmksXG4gICAgICAgICAgICAgICAgdGl0bGUsXG4gICAgICAgICAgICAgICAgZGF0ZTogaXRlbS5kYXRlLFxuICAgICAgICAgICAgICAgIGNvbnRleHQ6IGNvbnRlbnRcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIHJldHVybiBPYmplY3QudmFsdWVzKHJlc3VsdHMpLnNsaWNlKDAsIG1heFJlc3VsdExlbmd0aClcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKCF3aW5kb3cuX2luZGV4KSB7XG4gICAgICAgICAgICBmZXRjaChzZWFyY2hDb25maWcuZnVzZUluZGV4VVJMKVxuICAgICAgICAgICAgICAudGhlbihyZXNwb25zZSA9PiByZXNwb25zZS5qc29uKCkpXG4gICAgICAgICAgICAgIC50aGVuKGRhdGEgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IG9wdGlvbnMgPSB7XG4gICAgICAgICAgICAgICAgICBpc0Nhc2VTZW5zaXRpdmUsXG4gICAgICAgICAgICAgICAgICBmaW5kQWxsTWF0Y2hlcyxcbiAgICAgICAgICAgICAgICAgIG1pbk1hdGNoQ2hhckxlbmd0aCxcbiAgICAgICAgICAgICAgICAgIGxvY2F0aW9uLFxuICAgICAgICAgICAgICAgICAgdGhyZXNob2xkLFxuICAgICAgICAgICAgICAgICAgZGlzdGFuY2UsXG4gICAgICAgICAgICAgICAgICBpZ25vcmVMb2NhdGlvbixcbiAgICAgICAgICAgICAgICAgIHVzZUV4dGVuZGVkU2VhcmNoLFxuICAgICAgICAgICAgICAgICAgaWdub3JlRmllbGROb3JtLFxuICAgICAgICAgICAgICAgICAgaW5jbHVkZVNjb3JlOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgIHNob3VsZFNvcnQ6IHRydWUsXG4gICAgICAgICAgICAgICAgICBpbmNsdWRlTWF0Y2hlczogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgIGtleXM6IFtcbiAgICAgICAgICAgICAgICAgICAgJ2NvbnRlbnQnLFxuICAgICAgICAgICAgICAgICAgICAndGl0bGUnXG4gICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHdpbmRvdy5faW5kZXggPSBuZXcgRnVzZShkYXRhLCBvcHRpb25zKVxuICAgICAgICAgICAgICAgIGZpbmlzaChzZWFyY2goKSlcbiAgICAgICAgICAgICAgfSkuY2F0Y2goZXJyID0+IHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKGVycilcbiAgICAgICAgICAgICAgICBmaW5pc2goW10pXG4gICAgICAgICAgICAgIH0pXG4gICAgICAgICAgfSBlbHNlIGZpbmlzaChzZWFyY2goKSlcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIHRlbXBsYXRlczoge1xuICAgICAgICBzdWdnZXN0aW9uOiAoeyB0aXRsZSwgZGF0ZSwgY29udGV4dCB9KSA9PiBgPGRpdj48c3BhbiBjbGFzcz1cInN1Z2dlc3Rpb24tdGl0bGVcIj4ke3RpdGxlfTwvc3Bhbj48c3BhbiBjbGFzcz1cInN1Z2dlc3Rpb24tZGF0ZVwiPiR7ZGF0ZX08L3NwYW4+PC9kaXY+PGRpdiBjbGFzcz1cInN1Z2dlc3Rpb24tY29udGV4dFwiPiR7KGNvbnRleHQpfTwvZGl2PmAsXG4gICAgICAgIGVtcHR5OiAoeyBxdWVyeSB9KSA9PiBgPGRpdiBjbGFzcz1cInNlYXJjaC1lbXB0eVwiPiR7c2VhcmNoQ29uZmlnLm5vUmVzdWx0c0ZvdW5kfTogPHNwYW4gY2xhc3M9XCJzZWFyY2gtcXVlcnlcIj5cIiR7ZXNjYXBlKHF1ZXJ5KX1cIjwvc3Bhbj48L2Rpdj5gLFxuICAgICAgICBmb290ZXI6ICgpID0+IHtcbiAgICAgICAgICBjb25zdCB7IHNlYXJjaFR5cGUsIGljb24sIGhyZWYgfSA9IHNlYXJjaENvbmZpZy50eXBlID09PSAnYWxnb2xpYSdcbiAgICAgICAgICAgID8ge1xuICAgICAgICAgICAgICAgIHNlYXJjaFR5cGU6ICdhbGdvbGlhJyxcbiAgICAgICAgICAgICAgICBpY29uOiAnPGkgY2xhc3M9XCJmYWIgZmEtYWxnb2xpYSBmYS1md1wiPjwvaT4nLFxuICAgICAgICAgICAgICAgIGhyZWY6ICdodHRwczovL3d3dy5hbGdvbGlhLmNvbS8nXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIDoge1xuICAgICAgICAgICAgICAgIHNlYXJjaFR5cGU6ICdGdXNlLmpzJyxcbiAgICAgICAgICAgICAgICBpY29uOiAnJyxcbiAgICAgICAgICAgICAgICBocmVmOiAnaHR0cHM6Ly9mdXNlanMuaW8vJ1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIGA8ZGl2IGNsYXNzPVwic2VhcmNoLWZvb3RlclwiPlNlYXJjaCBieSA8YSBocmVmPVwiJHtocmVmfVwiIHJlbD1cIm5vb3BlbmVyIG5vcmVmZmVyXCIgdGFyZ2V0PVwiX2JsYW5rXCI+JHtpY29ufSAke3NlYXJjaFR5cGV9PC9hPjwvZGl2PmBcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pXG4gICAgYXV0b3NlYXJjaC5vbignYXV0b2NvbXBsZXRlOnNlbGVjdGVkJywgKF9ldmVudCwgc3VnZ2VzdGlvbiwgX2RhdGFzZXQsIF9jb250ZXh0KSA9PiB7XG4gICAgICB3aW5kb3cubG9jYXRpb24uYXNzaWduKHN1Z2dlc3Rpb24udXJpKVxuICAgIH0pXG4gICAgaWYgKGlzTW9iaWxlKSB3aW5kb3cuX3NlYXJjaE1vYmlsZSA9IGF1dG9zZWFyY2hcbiAgICBlbHNlIHdpbmRvdy5fc2VhcmNoRGVza3RvcCA9IGF1dG9zZWFyY2hcbiAgfVxuICBmdW5jdGlvbiBsb2FkU2NyaXB0IChpZCwgdXJsKSB7XG4gICAgaWYgKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCMke2lkfWApID09PSBudWxsKSB7XG4gICAgICBjb25zdCBoZWFkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignaGVhZCcpXG4gICAgICBjb25zdCBhdXRvY29tcGxldGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzY3JpcHQnKVxuICAgICAgYXV0b2NvbXBsZXRlLnNldEF0dHJpYnV0ZSgnc3JjJywgdXJsKVxuICAgICAgYXV0b2NvbXBsZXRlLnNldEF0dHJpYnV0ZSgnaWQnLCBpZClcbiAgICAgIGF1dG9jb21wbGV0ZS5vbmxvYWQgPSAoKSA9PiBpbml0QXV0b3NlYXJjaCgpXG4gICAgICBoZWFkLmFwcGVuZENoaWxkKGF1dG9jb21wbGV0ZSlcbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gaW5pdERldGFpbHMgKCkge1xuICBmb3JFYWNoKGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ2RldGFpbHMnKSwgJGRldGFpbHMgPT4ge1xuICAgIGNvbnN0ICRzdW1tYXJ5ID0gJGRldGFpbHMuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnZGV0YWlscy1zdW1tYXJ5JylbMF1cbiAgICAkc3VtbWFyeS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgIGNvbnN0IGNvbnRlbnQgPSAkc3VtbWFyeS5uZXh0RWxlbWVudFNpYmxpbmdcbiAgICAgIGlmICgkZGV0YWlscy5jbGFzc0xpc3QuY29udGFpbnMoJ29wZW4nKSkge1xuICAgICAgICBjb250ZW50LnN0eWxlLm1heEhlaWdodCA9IG51bGxcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbnRlbnQuc3R5bGUubWF4SGVpZ2h0ID0gY29udGVudC5zY3JvbGxIZWlnaHQgKyAncHgnXG4gICAgICB9XG4gICAgICAkZGV0YWlscy5jbGFzc0xpc3QudG9nZ2xlKCdvcGVuJylcbiAgICB9LCBmYWxzZSlcbiAgfSlcbn1cblxuZnVuY3Rpb24gaW5pdExpZ2h0R2FsbGVyeSAoKSB7XG4gIGlmICh3aW5kb3cuY29uZmlnLmxpZ2h0R2FsbGVyeSkge1xuICAgIGxpZ2h0R2FsbGVyeShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY29udGVudCcpLCB3aW5kb3cuY29uZmlnLmxpZ2h0R2FsbGVyeSlcbiAgfVxufVxuXG5mdW5jdGlvbiBpbml0SGlnaGxpZ2h0ICgpIHtcbiAgZm9yRWFjaChkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuaGlnaGxpZ2h0ID4gcHJlLmNocm9tYScpLCAkcHJlQ2hyb21hID0+IHtcbiAgICBjb25zdCAkY2hyb21hID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JylcbiAgICAkY2hyb21hLmNsYXNzTmFtZSA9ICRwcmVDaHJvbWEuY2xhc3NOYW1lXG4gICAgY29uc3QgJHRhYmxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndGFibGUnKVxuICAgICRjaHJvbWEuYXBwZW5kQ2hpbGQoJHRhYmxlKVxuICAgIGNvbnN0ICR0Ym9keSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3Rib2R5JylcbiAgICAkdGFibGUuYXBwZW5kQ2hpbGQoJHRib2R5KVxuICAgIGNvbnN0ICR0ciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3RyJylcbiAgICAkdGJvZHkuYXBwZW5kQ2hpbGQoJHRyKVxuICAgIGNvbnN0ICR0ZCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3RkJylcbiAgICAkdHIuYXBwZW5kQ2hpbGQoJHRkKVxuICAgICRwcmVDaHJvbWEucGFyZW50RWxlbWVudC5yZXBsYWNlQ2hpbGQoJGNocm9tYSwgJHByZUNocm9tYSlcbiAgICAkdGQuYXBwZW5kQ2hpbGQoJHByZUNocm9tYSlcbiAgfSlcbiAgZm9yRWFjaChkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuaGlnaGxpZ2h0ID4gLmNocm9tYScpLCAkY2hyb21hID0+IHtcbiAgICBjb25zdCAkY29kZUVsZW1lbnRzID0gJGNocm9tYS5xdWVyeVNlbGVjdG9yQWxsKCdwcmUuY2hyb21hID4gY29kZScpXG4gICAgaWYgKCRjb2RlRWxlbWVudHMubGVuZ3RoKSB7XG4gICAgICBjb25zdCAkY29kZSA9ICRjb2RlRWxlbWVudHNbJGNvZGVFbGVtZW50cy5sZW5ndGggLSAxXVxuICAgICAgY29uc3QgJGhlYWRlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpXG4gICAgICAkaGVhZGVyLmNsYXNzTmFtZSA9ICdjb2RlLWhlYWRlciAnICsgJGNvZGUuY2xhc3NOYW1lLnRvTG93ZXJDYXNlKClcbiAgICAgIGNvbnN0ICR0aXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKVxuICAgICAgJHRpdGxlLmNsYXNzTGlzdC5hZGQoJ2NvZGUtdGl0bGUnKVxuICAgICAgJHRpdGxlLmluc2VydEFkamFjZW50SFRNTCgnYWZ0ZXJiZWdpbicsICc8aSBjbGFzcz1cImFycm93IGZhcyBmYS1jaGV2cm9uLXJpZ2h0IGZhLWZ3XCI+PC9pPicpXG4gICAgICAkdGl0bGUuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgICAgIGNvbnN0IGNvbnRlbnQgPSAkY2hyb21hLmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ3RhYmxlLXdyYXBwZXInKVswXVxuICAgICAgICBpZiAoJGNocm9tYS5jbGFzc0xpc3QuY29udGFpbnMoJ29wZW4nKSkge1xuICAgICAgICAgIGNvbnRlbnQuc3R5bGUubWF4SGVpZ2h0ID0gbnVsbFxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNvbnRlbnQuc3R5bGUubWF4SGVpZ2h0ID0gY29udGVudC5zY3JvbGxIZWlnaHQgKyAncHgnXG4gICAgICAgIH1cbiAgICAgICAgJGNocm9tYS5jbGFzc0xpc3QudG9nZ2xlKCdvcGVuJylcbiAgICAgIH0sIGZhbHNlKVxuICAgICAgJGhlYWRlci5hcHBlbmRDaGlsZCgkdGl0bGUpXG4gICAgICBjb25zdCAkZWxsaXBzZXMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJylcbiAgICAgICRlbGxpcHNlcy5pbnNlcnRBZGphY2VudEhUTUwoJ2FmdGVyYmVnaW4nLCAnPGkgY2xhc3M9XCJmYXMgZmEtZWxsaXBzaXMtaCBmYS1md1wiPjwvaT4nKVxuICAgICAgJGVsbGlwc2VzLmNsYXNzTGlzdC5hZGQoJ2VsbGlwc2VzJylcbiAgICAgICRlbGxpcHNlcy5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgICAgJGNocm9tYS5jbGFzc0xpc3QuYWRkKCdvcGVuJylcbiAgICAgIH0sIGZhbHNlKVxuICAgICAgJGhlYWRlci5hcHBlbmRDaGlsZCgkZWxsaXBzZXMpXG4gICAgICBjb25zdCAkY29weSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKVxuICAgICAgJGNvcHkuaW5zZXJ0QWRqYWNlbnRIVE1MKCdhZnRlcmJlZ2luJywgJzxpIGNsYXNzPVwiZmFyIGZhLWNvcHkgZmEtZndcIj48L2k+JylcbiAgICAgICRjb3B5LmNsYXNzTGlzdC5hZGQoJ2NvcHknKVxuICAgICAgY29uc3QgY29kZSA9ICRjb2RlLmlubmVyVGV4dFxuICAgICAgaWYgKHdpbmRvdy5jb25maWcuY29kZS5tYXhTaG93bkxpbmVzIDwgMCB8fCBjb2RlLnNwbGl0KCdcXG4nKS5sZW5ndGggPCB3aW5kb3cuY29uZmlnLmNvZGUubWF4U2hvd25MaW5lcyArIDIpICRjaHJvbWEuY2xhc3NMaXN0LmFkZCgnb3BlbicpXG4gICAgICBpZiAod2luZG93LmNvbmZpZy5jb2RlLmNvcHlUaXRsZSkge1xuICAgICAgICAkY29weS5zZXRBdHRyaWJ1dGUoJ2RhdGEtY2xpcGJvYXJkLXRleHQnLCBjb2RlKVxuICAgICAgICAkY29weS50aXRsZSA9IHdpbmRvdy5jb25maWcuY29kZS5jb3B5VGl0bGVcbiAgICAgICAgY29uc3QgY2xpcGJvYXJkID0gbmV3IENsaXBib2FyZEpTKCRjb3B5KVxuICAgICAgICBjbGlwYm9hcmQub24oJ3N1Y2Nlc3MnLCBfZSA9PiB7XG4gICAgICAgICAgYW5pbWF0ZUNTUygkY29kZSwgJ2FuaW1hdGVfX2ZsYXNoJylcbiAgICAgICAgICAkY29weS5maXJzdEVsZW1lbnRDaGlsZC5jbGFzc05hbWUgPSAnZmFzIGZhLWNoZWNrIGZhLWZ3J1xuICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgJGNvcHkuZmlyc3RFbGVtZW50Q2hpbGQuY2xhc3NOYW1lID0gJ2ZhciBmYS1jb3B5IGZhLWZ3J1xuICAgICAgICAgIH0sIDMwMDApXG4gICAgICAgIH0pXG4gICAgICAgICRoZWFkZXIuYXBwZW5kQ2hpbGQoJGNvcHkpXG4gICAgICB9XG4gICAgICAkY2hyb21hLmluc2VydEJlZm9yZSgkaGVhZGVyLCAkY2hyb21hLmZpcnN0Q2hpbGQpXG4gICAgfVxuICB9KVxufVxuXG5mdW5jdGlvbiBpbml0VGFibGUgKCkge1xuICBmb3JFYWNoKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5jb250ZW50IHRhYmxlJyksICR0YWJsZSA9PiB7XG4gICAgY29uc3QgJHdyYXBwZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKVxuICAgICR3cmFwcGVyLmNsYXNzTmFtZSA9ICd0YWJsZS13cmFwcGVyJ1xuICAgICR0YWJsZS5wYXJlbnRFbGVtZW50LnJlcGxhY2VDaGlsZCgkd3JhcHBlciwgJHRhYmxlKVxuICAgICR3cmFwcGVyLmFwcGVuZENoaWxkKCR0YWJsZSlcbiAgICBpZiAod2luZG93LmNvbmZpZz8udGFibGU/LnNvcnQpIHtcbiAgICAgIG5ldyBUYWJsZXNvcnQoJHRhYmxlKVxuICAgIH1cbiAgfSlcbn1cblxuZnVuY3Rpb24gaW5pdFRvYyAoKSB7XG4gIGNvbnN0IHRvY0NvcmUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnVGFibGVPZkNvbnRlbnRzJylcbiAgLy8gUmV0dXJuIGRpcmVjdGx5IGlmIG5vIHRvY1xuICBpZiAodG9jQ29yZSA9PT0gbnVsbCkgcmV0dXJuXG4gIGNvbnN0IGlzVG9jU3RhdGljID0gd2luZG93Lm1hdGNoTWVkaWEgJiYgd2luZG93Lm1hdGNoTWVkaWEoJ29ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMDAwcHgpJykubWF0Y2hlc1xuXG4gIGlmIChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndG9jLXN0YXRpYycpLmdldEF0dHJpYnV0ZSgna2VwdCcpIHx8IGlzVG9jU3RhdGljKSB7XG4gICAgaWYgKHdpbmRvdy5fdG9jT25TY3JvbGwpIHdpbmRvdy5zY3JvbGxFdmVudFNldC5kZWxldGUod2luZG93Ll90b2NPblNjcm9sbClcbiAgfSBlbHNlIHtcbiAgICBjb25zdCB0b2MgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndG9jLWF1dG8nKVxuICAgIGNvbnN0IHRvY0xpbmtFbGVtZW50cyA9IHRvY0NvcmUucXVlcnlTZWxlY3RvckFsbCgnYTpmaXJzdC1jaGlsZCcpXG4gICAgY29uc3QgdG9jTGlFbGVtZW50cyA9IHRvY0NvcmUuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2xpJylcbiAgICBjb25zdCBoZWFkZXJMaW5rRWxlbWVudHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCdoZWFkZXJMaW5rJylcbiAgICBjb25zdCBoZWFkZXJJc0ZpeGVkID0gZG9jdW1lbnQuYm9keS5nZXRBdHRyaWJ1dGUoJ2hlYWRlci1kZXNrdG9wJykgIT09ICdub3JtYWwnXG4gICAgY29uc3QgaGVhZGVySGVpZ2h0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2hlYWRlci1kZXNrdG9wJykub2Zmc2V0SGVpZ2h0XG4gICAgY29uc3QgVE9QX1NQQUNJTkcgPSAyMCArIChoZWFkZXJJc0ZpeGVkID8gaGVhZGVySGVpZ2h0IDogMClcbiAgICBjb25zdCBtaW5Ub2NUb3AgPSB0b2Mub2Zmc2V0VG9wXG4gICAgY29uc3QgbWluU2Nyb2xsVG9wID0gbWluVG9jVG9wIC0gVE9QX1NQQUNJTkcgKyAoaGVhZGVySXNGaXhlZCA/IDAgOiBoZWFkZXJIZWlnaHQpXG4gICAgd2luZG93Ll90b2NPblNjcm9sbCA9IHdpbmRvdy5fdG9jT25TY3JvbGwgfHwgKCgpID0+IHtcbiAgICAgIGNvbnN0IGZvb3RlclRvcCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdwb3N0LWZvb3RlcicpLm9mZnNldFRvcFxuICAgICAgY29uc3QgbWF4VG9jVG9wID0gZm9vdGVyVG9wIC0gdG9jLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmhlaWdodFxuICAgICAgY29uc3QgbWF4U2Nyb2xsVG9wID0gbWF4VG9jVG9wIC0gVE9QX1NQQUNJTkcgKyAoaGVhZGVySXNGaXhlZCA/IDAgOiBoZWFkZXJIZWlnaHQpXG4gICAgICBpZiAod2luZG93Lm5ld1Njcm9sbFRvcCA8IG1pblNjcm9sbFRvcCkge1xuICAgICAgICAvLyBJZiBzY3JvbGwgdG8gdGhlIHRvcCBvZiB0aGUgcGFnZVxuICAgICAgICAvLyBTZXQgdG9jIHRvIGFic29sdXRlXG4gICAgICAgIHRvYy5zdHlsZS5wb3NpdGlvbiA9ICdhYnNvbHV0ZSdcbiAgICAgICAgdG9jLnN0eWxlLnRvcCA9IGAke21pblRvY1RvcH1weGBcbiAgICAgIH0gZWxzZSBpZiAod2luZG93Lm5ld1Njcm9sbFRvcCA+IG1heFNjcm9sbFRvcCkge1xuICAgICAgICAvLyBJZiBzY3JvbGwgdG8gdGhlIGJvdHRvbSBvZiB0aGUgcGFnZVxuICAgICAgICAvLyBTZXQgdG9jIHRvIGFic29sdXRlXG4gICAgICAgIHRvYy5zdHlsZS5wb3NpdGlvbiA9ICdhYnNvbHV0ZSdcbiAgICAgICAgdG9jLnN0eWxlLnRvcCA9IGAke21heFRvY1RvcH1weGBcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIElmIGluIHRoZSBtaWRkbGVcbiAgICAgICAgLy8gU2V0IHRvYyB0byBmaXhlZCB3aXRoIFRPUF9TUEFDSU5HXG4gICAgICAgIHRvYy5zdHlsZS5wb3NpdGlvbiA9ICdmaXhlZCdcbiAgICAgICAgdG9jLnN0eWxlLnRvcCA9IGAke1RPUF9TUEFDSU5HfXB4YFxuICAgICAgfVxuICAgICAgLy8gVXBkYXRlIHRoZSBhY3RpdmUgdG9jIGxpbmtcbiAgICAgIC8vIFJldHVybiBkaXJlY3RseSBpZiBubyB0b2MgbGlua1xuICAgICAgaWYgKHRvY0xpbmtFbGVtZW50cy5sZW5ndGggPT09IDApIHJldHVyblxuXG4gICAgICBsZXQgYWN0aXZlVG9jSW5kZXggPSAtMVxuICAgICAgY29uc3QgSU5ERVhfU1BBQ0lORyA9IFRPUF9TUEFDSU5HICsgd2luZG93Lm5ld1Njcm9sbFRvcFxuICAgICAgLy8gSWYgdGhlIElOREVYX1NQQUNJTkcgaXMgYmVsb3cgdGhlIGxhc3QgaGVhZGVyIGxpbmtcbiAgICAgIC8vIGFjdGl2YXRlIHRoZSBsYXN0IGVsZW1lbnRcbiAgICAgIGlmIChoZWFkZXJMaW5rRWxlbWVudHNbaGVhZGVyTGlua0VsZW1lbnRzLmxlbmd0aCAtIDFdLm9mZnNldFRvcCA8IElOREVYX1NQQUNJTkcpIHtcbiAgICAgICAgYWN0aXZlVG9jSW5kZXggPSBoZWFkZXJMaW5rRWxlbWVudHMubGVuZ3RoIC0gMVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gT3RoZXJ3aXNlIGFjdGl2YXRlIHRoZSBlbGVtZW50IHRoYXQgaXMgaW4gYmV0d2VlblxuICAgICAgICAvLyBVc2Ugb2Zmc2V0VG9wIGluc3RlYWQgb2YgZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkudG9wIGZvciBiZXR0ZXIgcGVyZm9ybWFuY2VcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBoZWFkZXJMaW5rRWxlbWVudHMubGVuZ3RoIC0gMTsgaSsrKSB7XG4gICAgICAgICAgY29uc3QgdGhpc1RvcCA9IGhlYWRlckxpbmtFbGVtZW50c1tpXS5vZmZzZXRUb3BcbiAgICAgICAgICBjb25zdCBuZXh0VG9wID0gaGVhZGVyTGlua0VsZW1lbnRzW2kgKyAxXS5vZmZzZXRUb3BcbiAgICAgICAgICBpZiAodGhpc1RvcCA8PSBJTkRFWF9TUEFDSU5HICYmIG5leHRUb3AgPiBJTkRFWF9TUEFDSU5HKSB7XG4gICAgICAgICAgICBhY3RpdmVUb2NJbmRleCA9IGlcbiAgICAgICAgICAgIGJyZWFrXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgICAvLyBSZW1vdmUgYWxsIGxlZ2FjeSBzdGF0ZXNcbiAgICAgIEFycmF5LmZyb20odG9jTGlua0VsZW1lbnRzKS5mb3JFYWNoKHRvY0xpbmsgPT4gdG9jTGluay5jbGFzc0xpc3QucmVtb3ZlKCdhY3RpdmUnKSlcbiAgICAgIEFycmF5LmZyb20odG9jTGlFbGVtZW50cykuZm9yRWFjaCh0b2NMaSA9PiB0b2NMaS5jbGFzc0xpc3QucmVtb3ZlKCdoYXMtYWN0aXZlJykpXG5cbiAgICAgIC8vIFNldCB0aGUgdG9jTGlua0VsZW1lbnQgdG8gYWN0aXZlXG4gICAgICAvLyBhbmQgYWxsIGl0cyBwYXJlbnQgdG8gaGFzLWFjdGl2ZVxuICAgICAgaWYgKGFjdGl2ZVRvY0luZGV4ID49IDAgJiYgYWN0aXZlVG9jSW5kZXggPCB0b2NMaW5rRWxlbWVudHMubGVuZ3RoKSB7XG4gICAgICAgIHRvY0xpbmtFbGVtZW50c1thY3RpdmVUb2NJbmRleF0uY2xhc3NMaXN0LmFkZCgnYWN0aXZlJylcbiAgICAgICAgLy8gdG9jTGlua0VsZW1lbnRzW2FjdGl2ZVRvY0luZGV4XS5zY3JvbGxJbnRvVmlldyh7XG4gICAgICAgIC8vICAgYmVoYXZpb3I6ICdzbW9vdGgnLFxuICAgICAgICAvLyAgIGJsb2NrOiAnY2VudGVyJ1xuICAgICAgICAvLyB9KVxuICAgICAgICBsZXQgcGFyZW50ID0gdG9jTGlua0VsZW1lbnRzW2FjdGl2ZVRvY0luZGV4XS5wYXJlbnRFbGVtZW50XG4gICAgICAgIHdoaWxlIChwYXJlbnQgIT09IHRvY0NvcmUpIHtcbiAgICAgICAgICBwYXJlbnQuY2xhc3NMaXN0LmFkZCgnaGFzLWFjdGl2ZScpXG4gICAgICAgICAgcGFyZW50ID0gcGFyZW50LnBhcmVudEVsZW1lbnQucGFyZW50RWxlbWVudFxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSlcbiAgICB3aW5kb3cuX3RvY09uU2Nyb2xsKClcbiAgICB3aW5kb3cuc2Nyb2xsRXZlbnRTZXQuYWRkKHdpbmRvdy5fdG9jT25TY3JvbGwpXG4gIH1cbn1cblxuZnVuY3Rpb24gaW5pdE1hcGJveCAoKSB7XG4gIGlmICh3aW5kb3cuY29uZmlnLm1hcGJveCkge1xuICAgIG1hcGJveGdsLmFjY2Vzc1Rva2VuID0gd2luZG93LmNvbmZpZy5tYXBib3guYWNjZXNzVG9rZW5cbiAgICBtYXBib3hnbC5zZXRSVExUZXh0UGx1Z2luKHdpbmRvdy5jb25maWcubWFwYm94LlJUTFRleHRQbHVnaW4pXG4gICAgd2luZG93Ll9tYXBib3hBcnIgPSB3aW5kb3cuX21hcGJveEFyciB8fCBbXVxuICAgIGZvckVhY2goZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnbWFwYm94JyksICRtYXBib3ggPT4ge1xuICAgICAgY29uc3QgeyBsbmcsIGxhdCwgem9vbSwgbGlnaHRTdHlsZSwgZGFya1N0eWxlLCBtYXJrZWQsIG5hdmlnYXRpb24sIGdlb2xvY2F0ZSwgc2NhbGUsIGZ1bGxzY3JlZW4gfSA9IHdpbmRvdy5jb25maWcuZGF0YVskbWFwYm94LmlkXVxuICAgICAgY29uc3QgbWFwYm94ID0gbmV3IG1hcGJveGdsLk1hcCh7XG4gICAgICAgIGNvbnRhaW5lcjogJG1hcGJveCxcbiAgICAgICAgY2VudGVyOiBbbG5nLCBsYXRdLFxuICAgICAgICB6b29tLFxuICAgICAgICBtaW5ab29tOiAwLjIsXG4gICAgICAgIHN0eWxlOiB3aW5kb3cuaXNEYXJrID8gZGFya1N0eWxlIDogbGlnaHRTdHlsZSxcbiAgICAgICAgYXR0cmlidXRpb25Db250cm9sOiBmYWxzZVxuICAgICAgfSlcbiAgICAgIGlmIChtYXJrZWQpIHtcbiAgICAgICAgbmV3IG1hcGJveGdsLk1hcmtlcigpLnNldExuZ0xhdChbbG5nLCBsYXRdKS5hZGRUbyhtYXBib3gpXG4gICAgICB9XG4gICAgICBpZiAobmF2aWdhdGlvbikge1xuICAgICAgICBtYXBib3guYWRkQ29udHJvbChuZXcgbWFwYm94Z2wuTmF2aWdhdGlvbkNvbnRyb2woKSwgJ2JvdHRvbS1yaWdodCcpXG4gICAgICB9XG4gICAgICBpZiAoZ2VvbG9jYXRlKSB7XG4gICAgICAgIG1hcGJveC5hZGRDb250cm9sKG5ldyBtYXBib3hnbC5HZW9sb2NhdGVDb250cm9sKHtcbiAgICAgICAgICBwb3NpdGlvbk9wdGlvbnM6IHtcbiAgICAgICAgICAgIGVuYWJsZUhpZ2hBY2N1cmFjeTogdHJ1ZVxuICAgICAgICAgIH0sXG4gICAgICAgICAgc2hvd1VzZXJMb2NhdGlvbjogdHJ1ZSxcbiAgICAgICAgICB0cmFja1VzZXJMb2NhdGlvbjogdHJ1ZVxuICAgICAgICB9KSwgJ2JvdHRvbS1yaWdodCcpXG4gICAgICB9XG4gICAgICBpZiAoc2NhbGUpIHtcbiAgICAgICAgbWFwYm94LmFkZENvbnRyb2wobmV3IG1hcGJveGdsLlNjYWxlQ29udHJvbCgpKVxuICAgICAgfVxuICAgICAgaWYgKGZ1bGxzY3JlZW4pIHtcbiAgICAgICAgbWFwYm94LmFkZENvbnRyb2wobmV3IG1hcGJveGdsLkZ1bGxzY3JlZW5Db250cm9sKCkpXG4gICAgICB9XG4gICAgICBtYXBib3guYWRkQ29udHJvbChuZXcgTWFwYm94TGFuZ3VhZ2UoKSlcbiAgICAgIHdpbmRvdy5fbWFwYm94QXJyLnB1c2gobWFwYm94KVxuICAgIH0pXG4gICAgd2luZG93Ll9tYXBib3hPblN3aXRjaFRoZW1lID0gKCkgPT4ge1xuICAgICAgZm9yRWFjaCh3aW5kb3cuX21hcGJveEFyciwgbWFwYm94ID0+IHtcbiAgICAgICAgY29uc3QgJG1hcGJveCA9IG1hcGJveC5nZXRDb250YWluZXIoKVxuICAgICAgICBjb25zdCB7IGxpZ2h0U3R5bGUsIGRhcmtTdHlsZSB9ID0gd2luZG93LmNvbmZpZy5kYXRhWyRtYXBib3guaWRdXG4gICAgICAgIG1hcGJveC5zZXRTdHlsZSh3aW5kb3cuaXNEYXJrID8gZGFya1N0eWxlIDogbGlnaHRTdHlsZSlcbiAgICAgICAgbWFwYm94LmFkZENvbnRyb2wobmV3IE1hcGJveExhbmd1YWdlKCkpXG4gICAgICB9KVxuICAgIH1cbiAgICB3aW5kb3cuc3dpdGNoVGhlbWVFdmVudFNldC5hZGQod2luZG93Ll9tYXBib3hPblN3aXRjaFRoZW1lKVxuICB9XG59XG5cbmZ1bmN0aW9uIGluaXRUeXBlaXQgKCkge1xuICBpZiAod2luZG93LmNvbmZpZy50eXBlaXQpIHtcbiAgICBjb25zdCB0eXBlaXRDb25maWcgPSB3aW5kb3cuY29uZmlnLnR5cGVpdFxuICAgIGNvbnN0IHNwZWVkID0gdHlwZWl0Q29uZmlnLnNwZWVkID8gdHlwZWl0Q29uZmlnLnNwZWVkIDogMTAwXG4gICAgY29uc3QgY3Vyc29yU3BlZWQgPSB0eXBlaXRDb25maWcuY3Vyc29yU3BlZWQgPyB0eXBlaXRDb25maWcuY3Vyc29yU3BlZWQgOiAxMDAwXG4gICAgY29uc3QgY3Vyc29yQ2hhciA9IHR5cGVpdENvbmZpZy5jdXJzb3JDaGFyID8gdHlwZWl0Q29uZmlnLmN1cnNvckNoYXIgOiAnfCdcbiAgICBPYmplY3QudmFsdWVzKHR5cGVpdENvbmZpZy5kYXRhKS5mb3JFYWNoKGdyb3VwID0+IHtcbiAgICAgIGNvbnN0IHR5cGVvbmUgPSAoaSkgPT4ge1xuICAgICAgICBjb25zdCBpZCA9IGdyb3VwW2ldXG4gICAgICAgIGlmICghZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaWQpLmhhc0F0dHJpYnV0ZSgnZGF0YS10eXBlaXQtaWQnKSkge1xuICAgICAgICAgIGNvbnN0IGluc3RhbmNlID0gbmV3IFR5cGVJdChgIyR7aWR9YCwge1xuICAgICAgICAgICAgc3RyaW5nczogd2luZG93LmNvbmZpZy5kYXRhW2lkXSxcbiAgICAgICAgICAgIHNwZWVkLFxuICAgICAgICAgICAgbGlmZUxpa2U6IHRydWUsXG4gICAgICAgICAgICBjdXJzb3JTcGVlZCxcbiAgICAgICAgICAgIGN1cnNvckNoYXIsXG4gICAgICAgICAgICB3YWl0VW50aWxWaXNpYmxlOiB0cnVlLFxuICAgICAgICAgICAgYWZ0ZXJDb21wbGV0ZTogKCkgPT4ge1xuICAgICAgICAgICAgICBpZiAoaSA9PT0gZ3JvdXAubGVuZ3RoIC0gMSkge1xuICAgICAgICAgICAgICAgIGlmICh0eXBlaXRDb25maWcuZHVyYXRpb24gPj0gMCkge1xuICAgICAgICAgICAgICAgICAgd2luZG93LnNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBpbnN0YW5jZS5kZXN0cm95KClcbiAgICAgICAgICAgICAgICAgIH0sIHR5cGVpdENvbmZpZy5kdXJhdGlvbilcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgaW5zdGFuY2UuZGVzdHJveSgpXG4gICAgICAgICAgICAgIHR5cGVvbmUoaSArIDEpXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSkuZ28oKVxuICAgICAgICB9XG4gICAgICB9XG4gICAgICB0eXBlb25lKDApXG4gICAgfSlcbiAgfVxufVxuXG5mdW5jdGlvbiBpbml0TWV0YSAoKSB7XG4gIGZ1bmN0aW9uIGdldE1ldGEgKG1ldGFOYW1lKSB7XG4gICAgY29uc3QgbWV0YXMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnbWV0YScpXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBtZXRhcy5sZW5ndGg7IGkrKykge1xuICAgICAgaWYgKG1ldGFzW2ldLmdldEF0dHJpYnV0ZSgnbmFtZScpID09PSBtZXRhTmFtZSkge1xuICAgICAgICByZXR1cm4gbWV0YXNbaV1cbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgY29uc3QgdGhlbWVDb2xvck1ldGEgPSBnZXRNZXRhKCd0aGVtZS1jb2xvcicpXG4gIGNvbnN0IG1ldGFDb2xvcnMgPSB7XG4gICAgbGlnaHQ6ICcjZjhmOGY4JyxcbiAgICBkYXJrOiAnIzI1MjYyNycsXG4gICAgYmxhY2s6ICcjMDAwMDAwJ1xuICB9XG4gIHdpbmRvdy5fbWV0YVRoZW1lQ29sb3JPblN3aXRjaFRoZW1lID0gKCkgPT4ge1xuICAgIHRoZW1lQ29sb3JNZXRhLmNvbnRlbnQgPSBtZXRhQ29sb3JzW2RvY3VtZW50LmJvZHkuZ2V0QXR0cmlidXRlKCd0aGVtZScpXVxuICB9XG4gIHdpbmRvdy5zd2l0Y2hUaGVtZUV2ZW50U2V0LmFkZCh3aW5kb3cuX21ldGFUaGVtZUNvbG9yT25Td2l0Y2hUaGVtZSlcbiAgd2luZG93Ll9tZXRhVGhlbWVDb2xvck9uU3dpdGNoVGhlbWUoKVxufVxuXG5mdW5jdGlvbiBvblNjcm9sbCAoKSB7XG4gIGNvbnN0ICRoZWFkZXJzID0gW11cbiAgY29uc3QgJHZpZXdDb21tZW50cyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd2aWV3LWNvbW1lbnRzJylcbiAgaWYgKGRvY3VtZW50LmJvZHkuZ2V0QXR0cmlidXRlKCdoZWFkZXItZGVza3RvcCcpID09PSAnYXV0bycpICRoZWFkZXJzLnB1c2goZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2hlYWRlci1kZXNrdG9wJykpXG4gIGlmIChkb2N1bWVudC5ib2R5LmdldEF0dHJpYnV0ZSgnaGVhZGVyLW1vYmlsZScpID09PSAnYXV0bycpICRoZWFkZXJzLnB1c2goZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2hlYWRlci1tb2JpbGUnKSlcbiAgaWYgKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjb21tZW50cycpKSB7XG4gICAgJHZpZXdDb21tZW50cy5ocmVmID0gJyNjb21tZW50cydcbiAgICAkdmlld0NvbW1lbnRzLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snXG4gIH0gZWxzZSB7XG4gICAgJHZpZXdDb21tZW50cy5zdHlsZS5kaXNwbGF5ID0gJ251bGwnXG4gIH1cbiAgY29uc3QgJGZpeGVkQnV0dG9ucyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdmaXhlZC1idXR0b25zJylcbiAgY29uc3QgQUNDVVJBQ1kgPSAyMDsgY29uc3QgTUlOSU1VTSA9IDEwMFxuICBmdW5jdGlvbiBoYW5kbGVTY3JvbGxFdmVudCAoKSB7XG4gICAgd2luZG93Lm5ld1Njcm9sbFRvcCA9IGdldFNjcm9sbFRvcCgpXG4gICAgY29uc3Qgc2Nyb2xsID0gd2luZG93Lm5ld1Njcm9sbFRvcCAtIHdpbmRvdy5vbGRTY3JvbGxUb3BcbiAgICBjb25zdCBpc01vYmlsZSA9IGlzTW9iaWxlV2luZG93KClcbiAgICBmb3JFYWNoKCRoZWFkZXJzLCAkaGVhZGVyID0+IHtcbiAgICAgIGlmIChzY3JvbGwgPiBBQ0NVUkFDWSkge1xuICAgICAgICAkaGVhZGVyLmNsYXNzTGlzdC5yZW1vdmUoJ2FuaW1hdGVfX2ZhZGVJbkRvd24nKVxuICAgICAgICBhbmltYXRlQ1NTKCRoZWFkZXIsIFsnYW5pbWF0ZV9fZmFkZU91dFVwJywgJ2FuaW1hdGVfX2Zhc3RlciddLCB0cnVlKVxuICAgICAgfSBlbHNlIGlmIChzY3JvbGwgPCAtQUNDVVJBQ1kgfHwgd2luZG93Lm5ld1Njcm9sbFRvcCA8PSAyMCkge1xuICAgICAgICAkaGVhZGVyLmNsYXNzTGlzdC5yZW1vdmUoJ2FuaW1hdGVfX2ZhZGVPdXRVcCcpXG4gICAgICAgIGFuaW1hdGVDU1MoJGhlYWRlciwgWydhbmltYXRlX19mYWRlSW5Eb3duJywgJ2FuaW1hdGVfX2Zhc3RlciddLCB0cnVlKVxuICAgICAgfVxuICAgIH0pXG4gICAgaWYgKHdpbmRvdy5uZXdTY3JvbGxUb3AgPiBNSU5JTVVNKSB7XG4gICAgICBpZiAoaXNNb2JpbGUgJiYgc2Nyb2xsID4gQUNDVVJBQ1kpIHtcbiAgICAgICAgJGZpeGVkQnV0dG9ucy5jbGFzc0xpc3QucmVtb3ZlKCdhbmltYXRlX19mYWRlSW4nKVxuICAgICAgICBhbmltYXRlQ1NTKCRmaXhlZEJ1dHRvbnMsIFsnYW5pbWF0ZV9fZmFkZU91dCcsICdhbmltYXRlX19mYXN0ZXInXSwgdHJ1ZSlcbiAgICAgIH0gZWxzZSBpZiAoIWlzTW9iaWxlIHx8IHNjcm9sbCA8IC1BQ0NVUkFDWSkge1xuICAgICAgICAkZml4ZWRCdXR0b25zLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snXG4gICAgICAgICRmaXhlZEJ1dHRvbnMuY2xhc3NMaXN0LnJlbW92ZSgnYW5pbWF0ZV9fZmFkZU91dCcpXG4gICAgICAgIGFuaW1hdGVDU1MoJGZpeGVkQnV0dG9ucywgWydhbmltYXRlX19mYWRlSW4nLCAnYW5pbWF0ZV9fZmFzdGVyJ10sIHRydWUpXG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmICghaXNNb2JpbGUpIHtcbiAgICAgICAgJGZpeGVkQnV0dG9ucy5jbGFzc0xpc3QucmVtb3ZlKCdhbmltYXRlX19mYWRlSW4nKVxuICAgICAgICBhbmltYXRlQ1NTKCRmaXhlZEJ1dHRvbnMsIFsnYW5pbWF0ZV9fZmFkZU91dCcsICdhbmltYXRlX19mYXN0ZXInXSwgdHJ1ZSlcbiAgICAgIH1cbiAgICAgICRmaXhlZEJ1dHRvbnMuc3R5bGUuZGlzcGxheSA9ICdub25lJ1xuICAgIH1cbiAgICBmb3IgKGNvbnN0IGV2ZW50IG9mIHdpbmRvdy5zY3JvbGxFdmVudFNldCkgZXZlbnQoKVxuICAgIHdpbmRvdy5vbGRTY3JvbGxUb3AgPSB3aW5kb3cubmV3U2Nyb2xsVG9wXG4gIH1cbiAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsIGhhbmRsZVNjcm9sbEV2ZW50LCBmYWxzZSlcbn1cblxuZnVuY3Rpb24gb25SZXNpemUgKCkge1xuICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgKCkgPT4ge1xuICAgIGlmICghd2luZG93Ll9yZXNpemVUaW1lb3V0KSB7XG4gICAgICB3aW5kb3cuX3Jlc2l6ZVRpbWVvdXQgPSB3aW5kb3cuc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIHdpbmRvdy5fcmVzaXplVGltZW91dCA9IG51bGxcbiAgICAgICAgZm9yIChjb25zdCBldmVudCBvZiB3aW5kb3cucmVzaXplRXZlbnRTZXQpIGV2ZW50KClcbiAgICAgICAgaW5pdFNlYXJjaCgpXG4gICAgICB9LCAxMDApXG4gICAgfVxuICB9LCBmYWxzZSlcbn1cblxuZnVuY3Rpb24gb25DbGlja01hc2sgKCkge1xuICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbWFzaycpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgIGZvciAoY29uc3QgZXZlbnQgb2Ygd2luZG93LmNsaWNrTWFza0V2ZW50U2V0KSBldmVudCgpXG4gICAgZG9jdW1lbnQuYm9keS5jbGFzc0xpc3QucmVtb3ZlKCdibHVyJylcbiAgfSwgZmFsc2UpXG59XG5cbmZ1bmN0aW9uIGluaXQgKCkge1xuICB3aW5kb3cuaXNEYXJrID0gZG9jdW1lbnQuYm9keS5nZXRBdHRyaWJ1dGUoJ3RoZW1lJykgIT09ICdsaWdodCdcbiAgd2luZG93Lm5ld1Njcm9sbFRvcCA9IGdldFNjcm9sbFRvcCgpXG4gIHdpbmRvdy5vbGRTY3JvbGxUb3AgPSB3aW5kb3cubmV3U2Nyb2xsVG9wXG4gIHdpbmRvdy5zY3JvbGxFdmVudFNldCA9IG5ldyBTZXQoKVxuICB3aW5kb3cucmVzaXplRXZlbnRTZXQgPSBuZXcgU2V0KClcbiAgd2luZG93LnN3aXRjaFRoZW1lRXZlbnRTZXQgPSBuZXcgU2V0KClcbiAgd2luZG93LmNsaWNrTWFza0V2ZW50U2V0ID0gbmV3IFNldCgpXG4gIGlmICh3aW5kb3cub2JqZWN0Rml0SW1hZ2VzKSBvYmplY3RGaXRJbWFnZXMoKVxuICBpbml0U1ZHSWNvbigpXG4gIGluaXRNZW51TW9iaWxlKClcbiAgaW5pdFN3aXRjaFRoZW1lKClcbiAgaW5pdFNlbGVjdFRoZW1lKClcbiAgaW5pdE1ldGEoKVxuICBpbml0U2VhcmNoKClcbiAgaW5pdERldGFpbHMoKVxuICBpbml0TGlnaHRHYWxsZXJ5KClcbiAgaW5pdEhpZ2hsaWdodCgpXG4gIGluaXRUYWJsZSgpXG4gIGluaXRUeXBlaXQoKVxuICBpbml0TWFwYm94KClcbiAgaW5pdFRvYygpXG4gIG9uU2Nyb2xsKClcbiAgb25SZXNpemUoKVxuICBvbkNsaWNrTWFzaygpXG59XG5cbmluaXQoKVxuIl0sCiAgIm1hcHBpbmdzIjogIm9FQUFBLElBQUFBLEVBQUFDLEVBQUEsQ0FBQUMsR0FBQUMsSUFBQSxDQUFBQSxFQUFPLFFBQVUsT0FBTyxZQ0d4QixJQUFNQyxFQUFZLElBR2xCLFNBQVNDLEVBQVFDLEVBQVEsQ0FDdkIsT0FBT0EsRUFBTyxRQUFRLEtBQU0sT0FBTyxFQUNoQyxRQUFRLEtBQU0sTUFBTSxFQUNwQixRQUFRLEtBQU0sTUFBTSxFQUNwQixRQUFRLEtBQU0sUUFBUSxFQUN0QixRQUFRLEtBQU0sUUFBUSxDQUMzQixDQUVBLFNBQVNDLEVBQVNDLEVBQVVDLEVBQVMsQ0FDbkNELEVBQVdBLEdBQVksQ0FBQyxFQUN4QixRQUFTRSxFQUFJLEVBQUdBLEVBQUlGLEVBQVMs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U0FBU0UsSUFBWSxDQUNuQixPQUFPLGlCQUFpQixTQUFVLElBQU0sQ0FDakMsT0FBTyxpQkFDVixPQUFPLGVBQWlCLE9BQU8sV0FBVyxJQUFNLENBQzlDLE9BQU8sZUFBaUIsS0FDeEIsUUFBVzFJLEtBQVMsT0FBTyxlQUFnQkEsRUFBTSxFQUNqREksRUFBVyxDQUNiLEVBQUcsR0FBRyxFQUVWLEVBQUcsRUFBSyxDQUNWLENBRUEsU0FBU3VJLElBQWUsQ0FDdEIsU0FBUyxlQUFlLE1BQU0sRUFBRSxpQkFBaUIsUUFBUyxJQUFNLENBQzlELFFBQVczSSxLQUFTLE9BQU8sa0JBQW1CQSxFQUFNLEVBQ3BELFNBQVMsS0FBSyxVQUFVLE9BQU8sTUFBTSxDQUN2QyxFQUFHLEVBQUssQ0FDVixDQUVBLFNBQVM0SSxJQUFRLENBQ2YsT0FBTyxPQUFTLFNBQVMsS0FBSyxhQUFhLE9BQU8sSUFBTSxRQUN4RCxPQUFPLGFBQWVsSyxFQUFhLEVBQ25DLE9BQU8sYUFBZSxPQUFPLGFBQzdCLE9BQU8sZUFBaUIsSUFBSSxJQUM1QixPQUFPLGVBQWlCLElBQUksSUFDNUIsT0FBTyxvQkFBc0IsSUFBSSxJQUNqQyxPQUFPLGtCQUFvQixJQUFJLElBQzNCLE9BQU8saUJBQWlCLGdCQUFnQixFQUM1Q08sRUFBWSxFQUNaTyxFQUFlLEVBQ2ZLLEVBQWdCLEVBQ2hCSSxFQUFnQixFQUNoQjJILEdBQVMsRUFDVHhILEVBQVcsRUFDWHlELEdBQVksRUFDWkcsR0FBaUIsRUFDakJDLEdBQWMsRUFDZGUsR0FBVSxFQUNWb0MsR0FBVyxFQUNYYixHQUFXLEVBQ1hyQixHQUFRLEVBQ1JnRCxHQUFTLEVBQ1RRLEdBQVMsRUFDVEMsR0FBWSxDQUNkLENBRUFDLEdBQUsiLAogICJuYW1lcyI6IFsicmVxdWlyZV90YWJsZXNvcnQiLCAiX19jb21tb25KU01pbiIsICJleHBvcnRzIiwgIm1vZHVsZSIsICJUYWJsZXNvcnQiLCAiZXNjYXBlIiwgInVuc2FmZSIsICJmb3JFYWNoIiwgImVsZW1lbnRzIiwgImhhbmRsZXIiLCAiaSIsICJnZXRTY3JvbGxUb3AiLCAiaXNNb2JpbGVXaW5kb3ciLCAiYW5pbWF0ZUNTUyIsICJlbGVtZW50IiwgImFuaW1hdGlvbiIsICJyZXNlcnZlZCIsICJjYWxsYmFjayIsICJpbml0U1ZHSWNvbiIsICJpY29uIiwgInJlc3BvbnNlIiwgInN2ZyIsICJ0ZW1wIiwgImRhdGFTdmciLCAidGl0bGVFbGVtZW50cyIsICJpbml0TWVudU1vYmlsZSIsICJtZW51VG9nZ2xlTW9iaWxlIiwgIm1lbnVNb2JpbGUiLCAic2V0Q29sb3JUaGVtZSIsICJ0aGVtZSIsICJpbml0U3dpdGNoVGhlbWUiLCAidGhlbWVTd2l0Y2giLCAiY3VycmVudFRoZW1lIiwgImV2ZW50IiwgImluaXRTZWxlY3RUaGVtZSIsICJ0aGVtZVNlbGVjdCIsICJqIiwgImluaXRTZWFyY2giLCAic2VhcmNoQ29uZmlnIiwgImlzTW9iaWxlIiwgIm1heFJlc3VsdExlbmd0aCIsICJzbmlwcGV0TGVuZ3RoIiwgImhpZ2hsaWdodFRhZyIsICJpc0Nhc2VTZW5zaXRpdmUiLCAibWluTWF0Y2hDaGFyTGVuZ3RoIiwgImZpbmRBbGxNYXRjaGVzIiwgImxvY2F0aW9uIiwgInRocmVzaG9sZCIsICJkaXN0YW5jZSIsICJpZ25vcmVMb2NhdGlvbiIsICJ1c2VFeHRlbmRlZFNlYXJjaCIsICJpZ25vcmVGaWVsZE5vcm0iLCAic3VmZml4IiwgImhlYWRlciIsICJzZWFyY2hJbnB1dCIsICJzZWFyY2hUb2dnbGUiLCAic2VhcmNoTG9hZGluZyIsICJzZWFyY2hDbGVhciIsICJsb2FkU2NyaXB0IiwgImUiLCAiaW5pdEF1dG9zZWFyY2giLCAiYXV0b3NlYXJjaCIsICJxdWVyeSIsICJmaW5pc2giLCAicmVzdWx0cyIsICJoaXRzIiwgInVyaSIsICJkYXRlIiwgInRpdGxlIiwgImNvbnRlbnQiLCAiZXJyIiwgInNlYXJjaCIsICJpdGVtIiwgInJlZkluZGV4IiwgIm1hdGNoZXMiLCAiaW5kaWNlcyIsICJ2YWx1ZSIsICJrZXkiLCAib2Zmc2V0IiwgInN1YnN0ciIsICJ0YWciLCAiZGF0YSIsICJvcHRpb25zIiwgImNvbnRleHQiLCAic2VhcmNoVHlwZSIsICJocmVmIiwgIl9ldmVudCIsICJzdWdnZXN0aW9uIiwgIl9kYXRhc2V0IiwgIl9jb250ZXh0IiwgImlkIiwgInVybCIsICJoZWFkIiwgImF1dG9jb21wbGV0ZSIsICJpbml0RGV0YWlscyIsICIkZGV0YWlscyIsICIkc3VtbWFyeSIsICJpbml0TGlnaHRHYWxsZXJ5IiwgImluaXRIaWdobGlnaHQiLCAiJHByZUNocm9tYSIsICIkY2hyb21hIiwgIiR0YWJsZSIsICIkdGJvZHkiLCAiJHRyIiwgIiR0ZCIsICIkY29kZUVsZW1lbnRzIiwgIiRjb2RlIiwgIiRoZWFkZXIiLCAiJHRpdGxlIiwgIiRlbGxpcHNlcyIsICIkY29weSIsICJjb2RlIiwgIl9lIiwgImluaXRUYWJsZSIsICIkd3JhcHBlciIsICJpbml0VG9jIiwgInRvY0NvcmUiLCAiaXNUb2NTdGF0aWMiLCAidG9jIiwgInRvY0xpbmtFbGVtZW50cyIsICJ0b2NMaUVsZW1lbnRzIiwgImhlYWRlckxpbmtFbGVtZW50cyIsICJoZWFkZXJJc0ZpeGVkIiwgImhlYWRlckhlaWdodCIsICJUT1BfU1BBQ0lORyIsICJtaW5Ub2NUb3AiLCAibWluU2Nyb2xsVG9wIiwgIm1heFRvY1RvcCIsICJtYXhTY3JvbGxUb3AiLCAiYWN0aXZlVG9jSW5kZXgiLCAiSU5ERVhfU1BBQ0lORyIsICJ0aGlzVG9wIiwgIm5leHRUb3AiLCAidG9jTGluayIsICJ0b2NMaSIsICJwYXJlbnQiLCAiaW5pdE1hcGJveCIsICIkbWFwYm94IiwgImxuZyIsICJsYXQiLCAiem9vbSIsICJsaWdodFN0eWxlIiwgImRhcmtTdHlsZSIsICJtYXJrZWQiLCAibmF2aWdhdGlvbiIsICJnZW9sb2NhdGUiLCAic2NhbGUiLCAiZnVsbHNjcmVlbiIsICJtYXBib3giLCAiaW5pdFR5cGVpdCIsICJ0eXBlaXRDb25maWciLCAic3BlZWQiLCAiY3Vyc29yU3BlZWQiLCAiY3Vyc29yQ2hhciIsICJncm91cCIsICJ0eXBlb25lIiwgImluc3RhbmNlIiwgImluaXRNZXRhIiwgImdldE1ldGEiLCAibWV0YU5hbWUiLCAibWV0YXMiLCAidGhlbWVDb2xvck1ldGEiLCAibWV0YUNvbG9ycyIsICJvblNjcm9sbCIsICIkaGVhZGVycyIsICIkdmlld0NvbW1lbnRzIiwgIiRmaXhlZEJ1dHRvbnMiLCAiQUNDVVJBQ1kiLCAiTUlOSU1VTSIsICJoYW5kbGVTY3JvbGxFdmVudCIsICJzY3JvbGwiLCAib25SZXNpemUiLCAib25DbGlja01hc2siLCAiaW5pdCJdCn0K
